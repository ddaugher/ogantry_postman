{
  "info": {
    "_postman_id": "1baa805b-5ae2-4650-983b-c5111bc969e1",
    "name": "backoffice v1.0.0",
    "description": "## API Status\nStatus for the API can be found at 'url to be defined'!\n\n# Overview\nWelcome to the Backoffice API Reference. If you're new to Backoffice, you will need to create an account before you will be able to access ReST endpoints.\n\n# Authentication\nA valid user, with matching password, can authenticate to the Backoffice API via Access/Refresh Tokens.  The user can obtain valid tokens via the 'session' endpoint.  After successful creation of the tokens, each api call will need to authenticate each request by setting the Authorization header with a valid Access Token. Create and manage your Access Token.\n\nWe accept just the Access Token:\n\n```\n\"Authorization\": \"14ac5499cfdd2bb2859e4476d2e5b1d2bad079bf\"\n```\n\nMake sure to store your API keys somewhere secure and never share them publicly.\n\n# Endpoints\nAll calls to the API need to start with the appropriate base URL:\n\n| Region        | URI           \n| ------------- |:-------------:\n| staging      | https://backoffice.gigalixirapp.com \n| production      | https://backofficeprod.gigalixirapp.com/ \n\n# Error Codes\n| Code        | Status Name | Description | suggested action           \n| ------------- |:-------------:|:-------------:|:-------------:\n400\t| Bad Request\t| There is a problem with your request.\t| Check your request follows the API documentation and uses correct syntax.| \n401\t| Unauthorized\t| You don't have the needed authorization to make the request.\t| Make sure you are using a valid API key with the necessary permissions for your request.\n403\t| Forbidden\t| The server understood the request but refused to fulfill it.\t| See if your  plan includes the resource you are requesting and your API key has the necessary premissions.\n404\t| Not Found\t| The server couldn't find the requested file.\t| Change your request URL to match a valid API endpoint.\n405\t| Method Not Allowed\t| The resource does not have the specified method. (e.g. PUT on transmissions)\t| Change the method to follow the documentation for the resource.\n409\t| Conflict\t| A conflict arose from your request. (e.g. user already exists with that email)\t| Modify the payload to clear the conflict.\n413\t| Request Entity Too Large\t| The size of the request exceeds the limit.\t| Check the documented limit for the API and reduce the size of the request.\n415\t| Unsupported Media Type\t| The request is not in a supported format.\t| Check that your Content-Type header is a supported type and that your request adheres to the documentation.\n420\t| Exceed Sending Limit\t| You exceeded your daily, monthly, or sandbox sending limit.\t| Check that you are within the limits of your  plan. If you are using the sandbox domain, then you'll need to add a sending domain to continue.\n422\t| Unprocessable Entity\t| The request was syntactically correct but failed due to semantic errors.\t| Make sure that your request includes all of the required fields and your data is valid.\n429\t| Too Many Requests\t| You sent too many requests in a given time period.\t| Wait 1 to 5 seconds before making another request. Heavier usage patterns may require a more sophisticated and incremental backoff strategy.\n500\t| Internal Server Error\t| Something went wrong on our end.\t| Try the request again later. If the error does not resolve, check our status page for service updates. You can also contact Support from the app [EU] if your issue persists.\n503\t| Service Unavailable\t| We are experiencing higher than normal levels of traffic.\t| Try the request again later.\n\n#### cURL\nIf you are using cURL to call the API, you must include the resource URI in quotes when you pass in multiple query parameters separated by an &.\n\nFor example:\n\n```\ncurl --location --request GET 'https://backoffice.gigalixirapp.com/api/v1/customers' \\\n--header 'Authorization: SFMyNTY.YTc1MWY2ZmMtNjFkOS00MDRlLWFiZDMtMDBhMDZhMzIzOWNi.2cm4bcmpBibIT6kY5tAwoKWOGrBAZNoGkQlacprS3F4'\n```\n\n### Postman\nIf you use Postman, you can download this collection here ->\n\n### API Conventions\n* Trailing slashes are ignored: /transmissions is equivalent to /transmissions/.\n* URL paths, URL query parameter names, and JSON field names are case sensitive.\n* URL paths use lower case, with dashes separating words.\n* Query parameters and JSON fields use lower case, with underscores separating words.\n* The HTTP status indicates whether an operation failed or succeeded, with extra information included in the HTTP response body.\n* All APIs return standard HTTP error code formats. See Errors.\n* Unexpected query parameters and request body fields are ignored.\n* Our JSON number type is bounded to a signed 32-bit integer.\n\n### Feature Availability\nBackoffice presents a unified core API to all users with a few noted exceptions. This documentation is meant to serve as reference for all accounts, from Developer to Enterprise. Features that are limited to some accounts will be marked appropriately throughout as:\n\n* Not available on Enterprise\n* Enterprise only\n\n### Account Suspension\n\n### Errors\nWhen you make an API call you may receive an error message in response. Either there is something wrong with your request or something went wrong on our end. Errors respond with status and message that contains a more precise message.\n\n#### Example Error\n\n```\n422 Unprocessable Entity\n```\n\n```\n{\n    \"error\": {\n        \"message\": \"Invalid email or password\",\n        \"status\": 401\n    }\n}\n```",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "customers",
      "item": [
        {
          "name": "list",
          "_postman_id": "b53c631a-7da1-4dd2-a35c-f5d631437153",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/customers",
            "description": "Lists all customers.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|Setting to Access Token is required|\n\n## Equal-to filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name|string|query|Customer Name|\n|is_active|boolean|query|Active status for the customer (e.g. 'true' or 'false'|\n|comment|string|query|optional comment associated with customer|\n\nThe 'equal-to' filters will only find exact matches for the filter requested.  Partial names and non-exact matches will not be returned.\n\nExample URL w/ query params:\n```\n{{host}}/api/v1/customers?name=sprite\n```\n\n## String-starts-with filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name_prefix|string|query|Customer Name|\n\nThe 'string-starts-with' filters will return all customers where the 'name_prefix' string value matches the first characters exactly for the customer name\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?name_prefix=AEP\n```\n\n## String-contains filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name_search|string|query|customer Name|\n|comment_search|string|query|comment|\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?name_search=tion\n```\n\n## Order-by sorting\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name|string|query|Customer Name|\n|is_active|boolean|query|Active status for the customer (e.g. 'true' or 'false'|\n|comment|string|query|optional comment associated with customer|\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?order_by=asc:name\n```\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?offset=2\n```"
          },
          "response": [
            {
              "id": "9217c61f-3f4b-470a-8c67-773bdef61fdc",
              "name": "response_200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.YTc1MWY2ZmMtNjFkOS00MDRlLWFiZDMtMDBhMDZhMzIzOWNi.2cm4bcmpBibIT6kY5tAwoKWOGrBAZNoGkQlacprS3F4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/customers"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "110"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 09 Sep 2020 01:51:56 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjL6kI3nj2jpNS8AAAME"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"customer\": {\n                \"id\": 1,\n                \"name\": \"Datanchor.io\",\n                \"ref\": \"/api/v1/customers/1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "15d37533-d18b-4245-971d-13b338e30822",
              "name": "401 - Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGJhNGNjMjktZTYwYi00NjNlLTg5YWEtMjExNjY5MzM5NzI2.Yl6PdI0P1cZImNKW8eoKBn4-3C_3AnCi_uSJZX81usU",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/customers"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 16 Sep 2020 12:24:54 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjVDKxlXfJD9fywAAHzB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "ids",
          "_postman_id": "30bdfe7f-9ec1-40ac-8230-1246e124ccd9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/customers/ids",
            "description": "Retrieves customers based on the query/filtering options, returning only a list of ids.  Generally used to gather a candidate list of ids in order to pass to another api.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|Setting to Access Token is required|\n\n## Equal-to filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name|string|query|Customer Name|\n|is_active|boolean|query|Active status for the customer (e.g. 'true' or 'false'|\n|comment|string|query|optional comment associated with customer|\n\nThe 'equal-to' filters will only find exact matches for the filter requested.  Partial names and non-exact matches will not be returned.\n\nExample URL w/ query params:\n```\n{{host}}/api/v1/customers?name=sprite\n```\n\n## String-starts-with filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name_prefix|string|query|Customer Name|\n\nThe 'string-starts-with' filters will return all customers where the 'name_prefix' string value matches the first characters exactly for the customer name\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?name_prefix=AEP\n```\n\n## String-contains filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name_search|string|query|customer Name|\n|comment_search|string|query|comment|\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?name_search=tion\n```\n\n## Order-by sorting\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name|string|query|Customer Name|\n|is_active|boolean|query|Active status for the customer (e.g. 'true' or 'false'|\n|comment|string|query|optional comment associated with customer|\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?order_by=asc:name\n```\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?offset=2\n```"
          },
          "response": [
            {
              "id": "51736394-38a8-4222-a389-7158009b5bce",
              "name": "401 - Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGJhNGNjMjktZTYwYi00NjNlLTg5YWEtMjExNjY5MzM5NzI2.Yl6PdI0P1cZImNKW8eoKBn4-3C_3AnCi_uSJZX81usU",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/customers"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 16 Sep 2020 12:24:54 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjVDKxlXfJD9fywAAHzB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "c5c52722-39a0-4dec-a8ad-d5c14e6defee",
              "name": "response_200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.YTc1MWY2ZmMtNjFkOS00MDRlLWFiZDMtMDBhMDZhMzIzOWNi.2cm4bcmpBibIT6kY5tAwoKWOGrBAZNoGkQlacprS3F4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/customers"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "110"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 09 Sep 2020 01:51:56 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjL6kI3nj2jpNS8AAAME"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"customer\": {\n                \"id\": 1,\n                \"name\": \"Datanchor.io\",\n                \"ref\": \"/api/v1/customers/1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "count",
          "_postman_id": "a1ddc39e-040e-4c87-9292-978a5bcba720",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/customers/count",
            "description": "# Count\n\nRetrieves customers based on the query/filtering options, returning the total number of records based on the supplied query params.  The total record count will be returned in the following response header `x-total-count`.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|Setting to Access Token is required|\n\n## Equal-to filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name|string|query|Customer Name|\n|is_active|boolean|query|Active status for the customer (e.g. 'true' or 'false'|\n|comment|string|query|optional comment associated with customer|\n\nThe 'equal-to' filters will only find exact matches for the filter requested.  Partial names and non-exact matches will not be returned.\n\nExample URL w/ query params:\n```\n{{host}}/api/v1/customers?name=sprite\n```\n\n## String-starts-with filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name_prefix|string|query|Customer Name|\n\nThe 'string-starts-with' filters will return all customers where the 'name_prefix' string value matches the first characters exactly for the customer name\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?name_prefix=AEP\n```\n\n## String-contains filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name_search|string|query|customer Name|\n|comment_search|string|query|comment|\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?name_search=tion\n```\n\n## Order-by sorting\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name|string|query|Customer Name|\n|is_active|boolean|query|Active status for the customer (e.g. 'true' or 'false'|\n|comment|string|query|optional comment associated with customer|\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?order_by=asc:name\n```\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?offset=2\n```"
          },
          "response": [
            {
              "id": "c8bd0415-67e5-4ebf-83cf-3f23e80e4d71",
              "name": "401 - Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGJhNGNjMjktZTYwYi00NjNlLTg5YWEtMjExNjY5MzM5NzI2.Yl6PdI0P1cZImNKW8eoKBn4-3C_3AnCi_uSJZX81usU",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/customers"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 16 Sep 2020 12:24:54 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjVDKxlXfJD9fywAAHzB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "fafb0731-040f-4cbb-97d3-66037246bb8e",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/customers/count"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "29"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 01 Dec 2020 02:30:04 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "Fkx20K4fZmhqibsAAAkB"
                },
                {
                  "key": "x-total-count",
                  "value": "1"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "8400dc97-adf3-401f-8b95-16b899bea35f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/customers/1",
            "description": "Gets a specific customer.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required|\n|id|number|path|customer id|\n\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/customers/1\n```"
          },
          "response": [
            {
              "id": "41ebb2a2-fea1-480a-9449-8416def28986",
              "name": "response_200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.YTc1MWY2ZmMtNjFkOS00MDRlLWFiZDMtMDBhMDZhMzIzOWNi.2cm4bcmpBibIT6kY5tAwoKWOGrBAZNoGkQlacprS3F4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/customers/1"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "139"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 09 Sep 2020 01:46:24 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjL6Q3k330jQFIcAALKC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer\": {\n            \"id\": 1,\n            \"name\": \"Datanchor.io\",\n            \"ref\": \"/api/v1/customers/1\"\n        }\n    },\n    \"message\": \"Customer retrieved successfully\",\n    \"success\": true\n}"
            },
            {
              "id": "b3c3ab1c-734e-4e95-afdd-9d9a3b07bc8f",
              "name": "response_401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.YTc1MWY2ZmMtNjFkOS00MDRlLWFiZDMtMDBhMDZhMzIzOWNi.2cm4bcmpBibIT6kY5tAwoKWOGrBAZNoGkQlacprS3F3",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/customers/1"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 09 Sep 2020 01:46:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjL6S7r-AFhRzioAALMC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "6fa459fb-32cc-462c-a9d8-cb96ea9d9e4a",
              "name": "response_404",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.YTc1MWY2ZmMtNjFkOS00MDRlLWFiZDMtMDBhMDZhMzIzOWNi.2cm4bcmpBibIT6kY5tAwoKWOGrBAZNoGkQlacprS3F4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/customers/2"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "66"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 09 Sep 2020 01:51:36 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjL6i9Vw7AihBekAAAEC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Unable to retrieve customer\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "94aac643-c3f5-4ffb-b07d-0a4266da94a3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"customer\": {\n        \"name\": \"Block of Hours2\",\n        \"is:active\": true,\n        \"comment\": \"updated comment\",\n        \"extended_fields\": {\n            \"ext_dog\": \"dog123\",\n            \"ext_number\": 123\n        }\n\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/customers/{{customer_id}}",
            "description": "Update a specific customer.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|id|number|path|customer id|yes|\n|name|string|body|customer name|yes|\n|is_active|boolean|body|Active status for the customer (e.g. 'true' or 'false'|no (will default to 'false' if not supplied|\n|comment|string|body|comment|no|\n|extended_fields|string|body|jsonb structure|no|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/customers/{{customer_id}}\n```"
          },
          "response": [
            {
              "id": "d48b18a1-d03b-4aee-a1c3-ced828fa23e4",
              "name": "response_200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.YTc1MWY2ZmMtNjFkOS00MDRlLWFiZDMtMDBhMDZhMzIzOWNi.2cm4bcmpBibIT6kY5tAwoKWOGrBAZNoGkQlacprS3F4",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer\": {\n        \"name\": \"Block of Hours2\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/customers/1"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "140"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 09 Sep 2020 01:53:41 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjL6qRrLnODKRDEAAAPB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer\": {\n            \"id\": 1,\n            \"name\": \"Block of Hours2\",\n            \"ref\": \"/api/v1/customers/1\"\n        }\n    },\n    \"message\": \"Customer updated successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "ea39deaf-a5fb-4ec2-810b-0019c0208975",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"customer\": {\n        \"name\": \"Block of Hours2\",\n        \"is_active\": true,\n        \"comment\": \"updated comment\",\n        \"extended_fields\": {\n            \"ext_dog\": \"dog123\",\n            \"ext_number\": 123\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/customers",
            "description": "Create a specific customer.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|id|number|path|customer id|yes|\n|name|string|body|customer name|yes|\n|is_active|boolean|body|Active status for the customer (e.g. 'true' or 'false'|no (will default to 'false' if not supplied|\n|comment|string|body|comment|no|\n|extended_fields|string|body|jsonb structure|no|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/customers/{{customer_id}}\n```"
          },
          "response": [
            {
              "id": "a922f26d-4ca7-4aa9-80ad-8e666ec94b7a",
              "name": "200",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.YTAwZDNhOTEtMTdkNy00MDcyLWI3ZDQtYjdmMDdiZjVmOGRl.5Cj1epEy5nx8ppn4YpNOZsNdLVF-28ddcKN0KYrrvg0"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer\": {\n        \"name\": \"Falling Sabre R&D3\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/customers"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "114"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 09 Sep 2020 02:09:10 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjL7gWcfsti1Qd8AAATB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer\": {\n            \"id\": 3,\n            \"name\": \"Falling Sabre R&D3\",\n            \"ref\": \"/api/v1/customers/3\"\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "delete",
          "_postman_id": "e52b1624-63e9-4e22-a25a-2bd28aebdc31",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/customers/{{customer_id}}",
            "description": "Delete a specific customer.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|id|number|path|customer id|yes|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/customers/{{customer_id}}\n```"
          },
          "response": [
            {
              "id": "59990e21-7160-4fa7-81e4-79effff6ce53",
              "name": "response_200",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.YTAwZDNhOTEtMTdkNy00MDcyLWI3ZDQtYjdmMDdiZjVmOGRl.5Cj1epEy5nx8ppn4YpNOZsNdLVF-28ddcKN0KYrrvg0"
                  }
                ],
                "url": "{{host}}/api/v1/customers/3"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "68"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 09 Sep 2020 02:10:36 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjL7lWma-BB04wAAAAZB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Customer deleted successfully\",\n    \"success\": true\n}"
            },
            {
              "id": "5241c523-1552-4f51-9144-895c66c4fbc8",
              "name": "repsonse_404",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.YTAwZDNhOTEtMTdkNy00MDcyLWI3ZDQtYjdmMDdiZjVmOGRl.5Cj1epEy5nx8ppn4YpNOZsNdLVF-28ddcKN0KYrrvg0"
                  }
                ],
                "url": "{{host}}/api/v1/customers/4"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "65"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 09 Sep 2020 02:11:00 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjL7mxOO1dD6w48AAAaB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Unable to delete customer\",\n    \"success\": false\n}"
            },
            {
              "id": "2a0f86da-0429-48c2-b74a-2bccab5e5f80",
              "name": "response_401",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.YTAwZDNhOTEtMTdkNy00MDcyLWI3ZDQtYjdmMDdiZjVmOGRl.5Cj1epEy5nx8ppn4YpNOZsNdLVF-28ddcKN0KYrrvg"
                  }
                ],
                "url": "{{host}}/api/v1/customers/4"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Wed, 09 Sep 2020 02:11:23 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjL7oIRGLLB6H3UAAAbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            }
          ]
        }
      ],
      "_postman_id": "fbd77323-91c6-4521-afae-9bdce27f61e9",
      "description": "## Description\nThe Customer API enables you to manage customers using the REST API.  This API is available for authenticated users, including OAuth apps.  Access token is required and user must have generic api_access enabled and 'user' permissions to the appropriate 'api_user_authorizations' entries for the customer endpoints.\n\n## Model\n| Key        | Format | Description | Auto-generated? | Required?\n| --- | --- | --- | --- | ---\n|id|integer|The ID for the customer (auto-generated)|yes|n/a\n|name|string|The name of the customer|no|yes\n|is_active|boolean|The active/inactive status of the customer|default (FALSE)|yes\n|comment|string|Any comments you would like to keep about the customer|no|no\n|extended_fields|jsonb|json formatted structure stored as json within the database|no|no\n|inserted_at|datetime|determined by the DBMS|yes|n/a\n|updated_at|datetime|determined by the DBMS|yes|n/a",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "39883f8a-a743-47c8-9048-6685fc534dc3",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "a11e0796-10a0-4a4a-897c-0dbdf3dd9b79",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "query_filters",
      "item": [
        {
          "name": "list",
          "_postman_id": "f6332aff-3ec5-4e7e-8d21-33b30f74da37",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/query_filters",
            "description": "Lists all query filters.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|Setting to Access Token is required|\n\n## Equal-to filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|is_shared|boolean|query|indicates whether query filter is shared with other users|\n|resource|string|query|resource the query string is associated, this is determined by the client|\n|query_string|string|query|url query string|\n|user_id|string|query|user id|\n|name|string|query|name for saved query string|\n\nThe 'equal-to' filters will only find exact matches for the filter requested.  Partial names and non-exact matches will not be returned.\n\nExample URL w/ query params:\n```\n{{host}}/api/v1/query_filters?name=sprite\n```\n\n## String-starts-with filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name_prefix|string|query| name|\n|query_string_prefix|string|query|query string|\n|resource_prefix|string|query|resource|\n\nThe 'string-starts-with' filters will return all query_filters where the 'name_prefix' string value matches the first characters exactly for the query_filter name\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/query_filters?name_prefix=AEP\n```\n\n## String-contains filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|name_search|string|query| name|\n|query_string_search|string|query|query string|\n|resource_search|string|query|resource|\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/query_filters?name_search=tion\n```\n\n## Order-by sorting\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|is_shared|boolean|query|indicates whether query filter is shared with other users|\n|resource|string|query|resource the query string is associated, this is determined by the client|\n|query_string|string|query|url query string|\n|user_id|string|query|user id|\n|name|string|query|name for saved query string|\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/query_filters?order_by=asc:name\n```\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/query_filters?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/query_filters?offset=2\n```"
          },
          "response": [
            {
              "id": "9e60b18f-13e2-4fae-85dc-3c2834c70791",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/query_filters"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 02:59:15 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlboI2y3ZkhHsFAAAADJ"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "339e2481-5d58-4385-a517-b80bf53d156b",
              "name": "200 OK - No Results Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/query_filters"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:06:28 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlboiCUCBmj-qaMAAAAG"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "790120ef-9afd-497e-a91d-27f8a54fa529",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/query_filters"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "222"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:07:01 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "Flboj_c-oFh04wAAAAQH"
                },
                {
                  "key": "x-total-count",
                  "value": "1"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"query_filters\": [\n            {\n                \"query_filter\": {\n                    \"id\": 1,\n                    \"is_shared\": true,\n                    \"name\": \"name\",\n                    \"query_string\": \"?name=abc&is_shared=true\",\n                    \"ref\": \"/api/v1/query_filters/1\",\n                    \"resource\": \"customers\",\n                    \"user_id\": 5\n                }\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "c5869ab1-1406-4bbc-8ea6-4caf4e2d9c77",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/query_filters/{{id}}",
            "description": "Gets a specific query_filter.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required|\n|id|number|path|query_filter id|\n\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/query_filters/{{id}}\n```"
          },
          "response": [
            {
              "id": "1ab50030-1782-41db-a10f-b7fb28ccfac7",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/query_filters/{{id}}"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 02:59:35 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlboKC6DTgC0o6UAAASH"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "277ba04c-e4ba-4a8f-992e-1857d6774d0c",
              "name": "401 Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/query_filters/{{id}}"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "179"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:07:38 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbomJnBcBisLnYAAAAD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"User Api Authorization Error, unable to proceed\",\n    \"message\": \"Sorry, your account does not permit api access to this location\",\n    \"success\": false\n}"
            },
            {
              "id": "11db7b57-0496-4f44-9c20-a7d835317823",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/query_filters/1"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "237"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:08:12 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbooGRb4hsDZVAAAABF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"query_filter\": {\n            \"id\": 1,\n            \"is_shared\": true,\n            \"name\": \"name\",\n            \"query_string\": \"?name=abc&is_shared=true\",\n            \"ref\": \"/api/v1/query_filters/1\",\n            \"resource\": \"customers\",\n            \"user_id\": 5\n        }\n    },\n    \"message\": \"query_filter retrieved successfully\",\n    \"success\": true\n}"
            },
            {
              "id": "f3f3c515-55b6-4a32-85f5-cc49f4b14642",
              "name": "404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/query_filters/2"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "109"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:08:46 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlboqF3mVdDgb_gAAAEJ"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 404,\n    \"errors\": \"Not found\",\n    \"message\": \"Unable to retrieve query_filter\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "delete",
          "_postman_id": "2b5538be-85ac-425c-9485-bdf3dd42d817",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/query_filters/{{id}}",
            "description": "Delete a specific query_filter.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|id|number|path|query filter id|yes|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/query_filters/{{id}}\n```"
          },
          "response": [
            {
              "id": "12a312c6-6c19-4df7-91eb-09743c8cf0d1",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/query_filters/{{id}}"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 02:57:16 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlboB9U_w8C4wVwAAByB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "ea17d709-a34c-48a0-b3d1-c6005dc93c40",
              "name": "200 OK",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/query_filters/52"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "72"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 02:58:34 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlboGdPuEUAmpiwAAACJ"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"query_filter deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "e7756a10-ea8b-4702-ac30-ee45ad8203f7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"query_filter\": {\n        \"is_shared\": true,\n        \"resource\": \"customers\",\n        \"query_string\": \"?name=abc&is_shared=true\",        \n        \"name\": \"name\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/query_filters/{{id}}",
            "description": "Update a specific query_filter.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|is_shared|boolean|body|indicates whether query filter is shared with other users|\n|resource|string|body|resource the query string is associated, this is determined by the client|\n|query_string|string|body|url query string|\n|name|string|body|name for saved query string|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/query_filters/{{id}}\n```"
          },
          "response": [
            {
              "id": "e30ba572-9c3e-4d95-a6bb-6b97470312a2",
              "name": "200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"query_filter\": {\n        \"is_shared\": true,\n        \"resource\": \"customers\",\n        \"query_string\": \"?name=abc&is_shared=true\",        \n        \"name\": \"name\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/query_filters/52"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "237"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 02:39:31 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbnD7WrWlEi0SUAAAOL"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"query_filter\": {\n            \"id\": 52,\n            \"is_shared\": true,\n            \"name\": \"name\",\n            \"query_string\": \"?name=abc&is_shared=true\",\n            \"ref\": \"/api/v1/query_filters/52\",\n            \"resource\": \"customers\",\n            \"user_id\": 5\n        }\n    },\n    \"message\": \"query_filter updated successfully\",\n    \"success\": true\n}"
            },
            {
              "id": "1e11940d-1e84-4aa0-a6ed-10ad39cd318d",
              "name": "422 Unprocessable Entity",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"query_filter\": {\n        \"is_shared\": true,\n        \"resource\": \"customers\",\n        \"query_string\": \"?name=abc&is_shared=true\",        \n        \"name\": \"name\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/query_filters/53"
              },
              "status": "Unprocessable Entity",
              "code": 422,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "107"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 02:39:55 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbnFUQzvP-pjmsAAAgK"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 422,\n    \"errors\": \"Not found\",\n    \"message\": \"Unable to update query_filter\",\n    \"success\": false\n}"
            },
            {
              "id": "075af195-9b8f-4903-8795-8f46593a9938",
              "name": "401 Unauthorized - Access Authorization",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"query_filter\": {\n        \"is_shared\": true,\n        \"resource\": \"customers\",\n        \"query_string\": \"?name=abc&is_shared=true\",        \n        \"name\": \"name\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/query_filters/{{id}}"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "77"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 02:40:26 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbnHIMKVkO6aiYAAAXI"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"message\": \"Sorry, your account does not permit api access to this location\"\n}"
            },
            {
              "id": "2249a37a-4b9f-4a50-a119-e01bc145fe6c",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"query_filter\": {\n        \"is_shared\": true,\n        \"resource\": \"customers\",\n        \"query_string\": \"?name=abc&is_shared=true\",        \n        \"name\": \"name\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/query_filters/{{id}}"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 02:53:44 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "Flbn1jaR1uARgoQAAATE"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "5a270899-dbfb-4fef-b2f1-96c3397ba11b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"query_filter\": {\n        \"is_shared\": true,\n        \"resource\": \"customers\",\n        \"query_string\": \"?name=abc&is_shared=true\",        \n        \"name\": \"name\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/query_filters",
            "description": "Create a specific query_filter.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|is_shared|boolean|body|indicates whether query filter is shared with other users|\n|resource|string|body|resource the query string is associated, this is determined by the client|\n|query_string|string|body|url query string|\n|name|string|body|name for saved query string|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/query_filters/{{id}}\n```"
          },
          "response": [
            {
              "id": "2faf6fd4-1655-44d3-8e46-ab6a5c540300",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"query_filter\": {\n        \"is_shared\": true,\n        \"resource\": \"customers\",\n        \"query_string\": \"?name=abc&is_shared=true\",        \n        \"name\": \"name\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/query_filters"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:00:18 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlboMh92P1il3rIAAAAK"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "0fe5b37f-1e05-4779-8ea3-18216fdd8e60",
              "name": "200 OK",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"query_filter\": {\n        \"is_shared\": true,\n        \"resource\": \"customers\",\n        \"query_string\": \"?name=abc&is_shared=true\",        \n        \"name\": \"name\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/query_filters"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "204"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:00:53 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlboOhf_tECxMBMAAATH"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"query_filter\": {\n            \"id\": 53,\n            \"is_shared\": true,\n            \"name\": \"name\",\n            \"query_string\": \"?name=abc&is_shared=true\",\n            \"ref\": \"/api/v1/query_filters/53\",\n            \"resource\": \"customers\",\n            \"user_id\": 5\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        }
      ],
      "_postman_id": "4d6eee15-aec3-4940-ab5d-5621af298c7a",
      "description": "## Description\nThe Query_Filters API enables you to manage query filters using the REST API.  This API is available for authenticated users, including OAuth apps.  Access token is required and user must have generic api_access enabled and 'user' permissions to the appropriate 'api_user_authorizations' entries for the customer endpoints.  The Query Filters API is a service that can be utilized by a third-party client to store query parameter strings which could be utilized for stored and/or saved filters for any backoffice service.\n\n## Model\n| Key        | Format | Description | Auto-generated? | Required?\n| --- | --- | --- | --- | ---\n|id|integer|The ID for the query filter (auto-generated)|yes|n/a\n|name|string|The name assigned to the query filter.  Naming convention will be determined by the third-party client|no|yes\n|is_shared|boolean|The boolean indicator identifying whether or not the saved query string will be shared with other users|default (FALSE)|yes\n|resource|string|the 'string' value of the resource associated with the query string.|no|yes\n|query_string|string|the 'string' value of the query_params.|no|yes\n|inserted_at|datetime|determined by the DBMS|yes|n/a\n|updated_at|datetime|determined by the DBMS|yes|n/a"
    },
    {
      "name": "alerts",
      "item": [
        {
          "name": "list",
          "_postman_id": "73284642-d102-4b4c-b50c-1351a370b8af",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/alerts?",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "alerts"
              ],
              "query": [
                {
                  "key": "",
                  "value": null
                }
              ]
            },
            "description": "Lists all alerts.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|Setting to Access Token is required|\n\n## Equal-to filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|key|string|query|key|\n|message|string|query|message|\n|name|string|query|name|\n|response|string|query|response|\n|type|string|query|type|\n\nThe 'equal-to' filters will only find exact matches for the filter requested.  Partial names and non-exact matches will not be returned.\n\nExample URL w/ query params:\n```\n{{host}}/api/v1/alerts?name=sprite\n```\n\n## String-starts-with filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|key_prefix|string|query|key|\n|message_prefix|string|query|message|\n|name_prefix|string|query|name|\n|response_prefix|string|query|response|\n|type_prefix|string|query|type|\n\nThe 'string-starts-with' filters will return all customers where the 'name_prefix' string value matches the first characters exactly for the customer name\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/alerts?name_prefix=AEP\n```\n\n## String-contains filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|key_search|string|query|key|\n|message_search|string|query|message|\n|name_search|string|query|name|\n|response_search|string|query|response|\n|type_search|string|query|type|\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/alerts?name_search=tion\n```\n\n## Order-by sorting\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|key|string|query|key|\n|message|string|query|message|\n|name|string|query|name|\n|response|string|query|response|\n|type|string|query|type|\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?order_by=asc:name\n```\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?offset=2\n```"
          },
          "response": [
            {
              "id": "754f7b89-7b47-4dd0-bf58-b22485182b65",
              "name": "401 Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{host}}/api/v1/alerts?",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "alerts"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:17:05 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpHL2Ps8rTD8kAAALI"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "b0d01614-4a86-48c5-83e6-5a72545bbf8f",
              "name": "list - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{host}}/api/v1/alerts?",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "alerts"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "175"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:24:48 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpiGQmgJer2koAAApH"
                },
                {
                  "key": "x-total-count",
                  "value": "1"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"alerts\": [\n            {\n                \"alert\": {\n                    \"id\": 1,\n                    \"key\": \"key\",\n                    \"message\": \"message\",\n                    \"name\": \"name\",\n                    \"ref\": \"/api/v1/alerts/1\",\n                    \"response\": \"response\",\n                    \"type\": \"type\"\n                }\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "ab0dd57d-3e74-471d-bae3-cb911093f245",
              "name": "list - 200 OK - no results found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{host}}/api/v1/alerts?",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "alerts"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:25:48 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbplmRHsr3pQcoAAAzB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "count",
          "_postman_id": "4d55db47-2c04-41d8-9195-416098523de9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/alerts?",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "alerts"
              ],
              "query": [
                {
                  "key": "",
                  "value": null
                }
              ]
            },
            "description": "Lists all alerts.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|Setting to Access Token is required|\n\n## Equal-to filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|key|string|query|key|\n|message|string|query|message|\n|name|string|query|name|\n|response|string|query|response|\n|type|string|query|type|\n\nThe 'equal-to' filters will only find exact matches for the filter requested.  Partial names and non-exact matches will not be returned.\n\nExample URL w/ query params:\n```\n{{host}}/api/v1/alerts?name=sprite\n```\n\n## String-starts-with filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|key_prefix|string|query|key|\n|message_prefix|string|query|message|\n|name_prefix|string|query|name|\n|response_prefix|string|query|response|\n|type_prefix|string|query|type|\n\nThe 'string-starts-with' filters will return all customers where the 'name_prefix' string value matches the first characters exactly for the customer name\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/alerts?name_prefix=AEP\n```\n\n## String-contains filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|key_search|string|query|key|\n|message_search|string|query|message|\n|name_search|string|query|name|\n|response_search|string|query|response|\n|type_search|string|query|type|\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/alerts?name_search=tion\n```\n\n## Order-by sorting\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|key|string|query|key|\n|message|string|query|message|\n|name|string|query|name|\n|response|string|query|response|\n|type|string|query|type|\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?order_by=asc:name\n```\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/customers?offset=2\n```"
          },
          "response": [
            {
              "id": "598e6594-8623-4cc1-81e9-628b8775fb11",
              "name": "401 Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{host}}/api/v1/alerts?",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "alerts"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:16:16 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpETTWkTY0jUIAAABK"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "b04c252b-8b86-4e53-a936-31643617206a",
              "name": "count - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{host}}/api/v1/alerts?",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "alerts"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "175"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:26:14 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpnHSGZJ2daD0AAAXF"
                },
                {
                  "key": "x-total-count",
                  "value": "1"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"alerts\": [\n            {\n                \"alert\": {\n                    \"id\": 2,\n                    \"key\": \"key\",\n                    \"message\": \"message\",\n                    \"name\": \"name\",\n                    \"ref\": \"/api/v1/alerts/2\",\n                    \"response\": \"response\",\n                    \"type\": \"type\"\n                }\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "4e6649fa-5503-4ab5-99b9-4548c11ded33",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/alerts/3",
            "description": "Gets a specific alert.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required|\n|id|number|path|id|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/alerts/1\n```"
          },
          "response": [
            {
              "id": "982f6b21-c1b0-404f-b14c-0d81e63cf025",
              "name": "401 Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/alerts/3"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:16:43 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpF3xE2J3pNS8AAARH"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "ecb19cf7-84e7-41c1-a608-377a597e1203",
              "name": "get - 404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/alerts/3"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "102"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:26:28 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "Flbpn5scvIWb2J8AAAKL"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 404,\n    \"errors\": \"Not found\",\n    \"message\": \"Unable to retrieve alert\",\n    \"success\": false\n}"
            },
            {
              "id": "e405a6d6-374a-4191-9207-1f640aef8730",
              "name": "get - 200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/alerts/2"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "190"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:26:48 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbppG325fXOLnwAAAbE"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"alert\": {\n            \"id\": 2,\n            \"key\": \"key\",\n            \"message\": \"message\",\n            \"name\": \"name\",\n            \"ref\": \"/api/v1/alerts/2\",\n            \"response\": \"response\",\n            \"type\": \"type\"\n        }\n    },\n    \"message\": \"alert retrieved successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "delete",
          "_postman_id": "742deae6-899f-4e58-9d4f-60bee7645d50",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/alerts/1",
            "description": "Delete a specific alert.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|id|number|path|id|yes|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/alerts/{{id}}\n```"
          },
          "response": [
            {
              "id": "35a73c1c-a004-4ec0-9147-56bb818e2896",
              "name": "401 Unauthorized",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/alerts/1"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:17:20 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpIESJ788hyEwAAAAE"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "9763772b-c3cf-4183-b680-a97e2f5238ec",
              "name": "delete - 404 Not Found",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/alerts/2"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "100"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:25:12 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpjfBido310YIAAAVK"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 404,\n    \"errors\": \"Not found\",\n    \"message\": \"Unable to delete alert\",\n    \"success\": false\n}"
            },
            {
              "id": "ffb169dc-886a-42de-8a29-361886e401a4",
              "name": "delete - 200 OK",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/alerts/1"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "65"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:25:32 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpkpTRoiA2dMUAAAaE"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"alert deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "68ef85f6-308f-4cce-9da3-b70b2a9e547d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"alert\": {\n        \"key\": \"key\",\n        \"type\": \"type\",\n        \"name\": \"name\",\n        \"message\": \"message\",\n        \"response\": \"response\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/alerts/3",
            "description": "Update a specific alert.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|id|number|path|id|yes|\n|key|string|body|key|yes\n|message|string|body|message|yes\n|name|string|body|name|yes\n|response|string|body|response|no\n|type|string|body|type|yes\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/alerts/{{id}}\n```"
          },
          "response": [
            {
              "id": "78104d38-7cc6-4331-8a85-744e159122be",
              "name": "401 Unauthorized",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"alert\": {\n        \"key\": \"key\",\n        \"type\": \"type\",\n        \"name\": \"name\",\n        \"message\": \"message\",\n        \"response\": \"response\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/alerts/3"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:17:35 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpI66YIjY_LggAAASH"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "5ade6576-ff2c-46b1-8424-94334cda6c13",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"alert\": {\n        \"key\": \"key\",\n        \"type\": \"type\",\n        \"name\": \"name\",\n        \"message\": \"message\",\n        \"response\": \"response\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/alerts",
            "description": "Update a specific alert.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|id|number|path|id|yes|\n|key|string|body|key|yes\n|message|string|body|message|yes\n|name|string|body|name|yes\n|response|string|body|response|no\n|type|string|body|type|yes\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/alerts/{{id}}\n```"
          },
          "response": [
            {
              "id": "34d3dc9d-0368-4970-bda1-6c4d82fadebe",
              "name": "401 Unauthorized",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"alert\": {\n        \"key\": \"key\",\n        \"type\": \"type\",\n        \"name\": \"name\",\n        \"message\": \"message\",\n        \"response\": \"response\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/alerts"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:17:48 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpJte4Or42QN4AAAMI"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "cacc2256-5067-41f6-82bd-2f2983e2ac75",
              "name": "create - 401 Unauthorized",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"alert\": {\n        \"key\": \"key\",\n        \"type\": \"type\",\n        \"name\": \"name\",\n        \"message\": \"message\",\n        \"response\": \"response\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/alerts"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "179"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:18:20 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpLkanir26-KsAAACD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"User Api Authorization Error, unable to proceed\",\n    \"message\": \"Sorry, your account does not permit api access to this location\",\n    \"success\": false\n}"
            },
            {
              "id": "e74a40cf-dced-437d-bfeb-a38dfe43c4a3",
              "name": "create - 200 OK",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"alert\": {\n        \"key\": \"key\",\n        \"type\": \"type\",\n        \"name\": \"name\",\n        \"message\": \"message\",\n        \"response\": \"response\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/alerts"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "162"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:22:19 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpZamTYFo4vrgAAAnH"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"alert\": {\n            \"id\": 1,\n            \"key\": \"key\",\n            \"message\": \"message\",\n            \"name\": \"name\",\n            \"ref\": \"/api/v1/alerts/1\",\n            \"response\": \"response\",\n            \"type\": \"type\"\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "749f8bf7-d06e-47e6-9d92-63690f3ec42f",
              "name": "create - 422 invalid data",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"alert\": {\n        \"key\": \"key\",\n        \"type\": \"type\",\n        \"message\": \"message\",\n        \"response\": \"response\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/alerts"
              },
              "status": "Unprocessable Entity",
              "code": 422,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "113"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 03:22:51 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlbpbR-sG9Ks7nYAAAoH"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 422,\n    \"errors\": \"name: can't be blank, \",\n    \"message\": \"Unable to create alert\",\n    \"success\": false\n}"
            }
          ]
        }
      ],
      "_postman_id": "04692be9-c056-4bd1-843f-b6b2a55da6f3",
      "description": "## Description\nThe Alerts API enables you to manage alerts using the REST API.  This API is available for authenticated users, including OAuth apps.  Access token is required and user must have generic api_access enabled and 'user' permissions to the appropriate 'api_user_authorizations' entries for the customer endpoints.\n\n## Model\n| Key        | Format | Description | Auto-generated? | Required?\n| --- | --- | --- | --- | ---\n|id|integer|The ID for the alert (auto-generated)|yes|n/a\n|name|string|The name of the alert|no|yes\n|key|string|client defined key|no|yes\n|type|string|client defined type|no|yes\n|message|string|client defined message|no|yes\n|response|string|dlient defined response|no|no\n|inserted_at|datetime|determined by the DBMS|yes|n/a\n|updated_at|datetime|determined by the DBMS|yes|n/a"
    },
    {
      "name": "customer_contacts",
      "item": [
        {
          "name": "list",
          "_postman_id": "1db8139c-adcf-4052-85cc-eec138fd864c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/contacts/customer",
            "description": "Lists all alerts.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|Setting to Access Token is required|\n\n## Equal-to filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|comment|string|query|comment|\n|customer_id|string|query|customer_id associated with contact|\n|customer_name|string|query|customer name associated with contact|\n|email|string|query|email address|\n|is_primary|string|query|boolean indicating whether or not the contact is identified as primary|\n|name|string|query|contact name|\n|phone|string|query|contact phone|\n|title|string|query|contact title|\n\nThe 'equal-to' filters will only find exact matches for the filter requested.  Partial names and non-exact matches will not be returned.\n\nExample URL w/ query params:\n```\n{{host}}/api/v1/contacts/customer?name=sprite\n```\n\n## String-starts-with filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|customer_name_prefix|string|query|customer name associated with contact|\n|email_prefix|string|query|email address|\n|name_prefix|string|query|contact name|\n|title_prefix|string|query|contact title|\n\nThe 'string-starts-with' filters will return all customers where the 'name_prefix' string value matches the first characters exactly for the customer name\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/alerts?name_prefix=AEP\n```\n\n## String-contains filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|customer_name_search|string|query|customer name associated with contact|\n|email_search|string|query|email address|\n|name_search|string|query|contact name|\n|title_search|string|query|contact title|\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/alerts?name_search=tion\n```\n\n## Order-by sorting\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|comment|string|query|comment|\n|customer_id|string|query|customer_id associated with contact|\n|customer_name|string|query|customer name associated with contact|\n|email|string|query|email address|\n|is_primary|string|query|boolean indicating whether or not the contact is identified as primary|\n|name|string|query|contact name|\n|phone|string|query|contact phone|\n|title|string|query|contact title|\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/contacts/customer?order_by=asc:name\n```\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/contacts/customer?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/contacts/customer?offset=2\n```"
          },
          "response": [
            {
              "id": "525347f3-8890-4116-92f9-f15361d36be0",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:17:25 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnVs44v9C1Qd8AAAAH"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "a409e722-f340-4097-92bc-6aa5c36b2248",
              "name": "200 OK - No results found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:19:38 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "Flcndd9_EGhtlCsAAADE"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "641aa5c2-a462-4722-b911-39558daf5078",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "296"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:24:27 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnuQhZm8hCKvYAAAGB"
                },
                {
                  "key": "x-total-count",
                  "value": "1"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer_contacts\": [\n            {\n                \"customer_contact\": {\n                    \"comment\": \"comment here\",\n                    \"customer\": {\n                        \"id\": 1,\n                        \"ref\": \"/api/v1/customers/1\"\n                    },\n                    \"email\": \"a@a.com\",\n                    \"id\": 2,\n                    \"is_primary\": true,\n                    \"name\": \"name here\",\n                    \"phone\": \"2345678902\",\n                    \"ref\": \"/api/v1/contacts/customer/2\",\n                    \"title\": \"title here\"\n                }\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "count",
          "_postman_id": "2b1e3a4c-6949-49b5-a28a-fe113e16fd82",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/contacts/customer",
            "description": "Count all alerts.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|Setting to Access Token is required|\n\n## Equal-to filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|comment|string|query|comment|\n|customer_id|string|query|customer_id associated with contact|\n|customer_name|string|query|customer name associated with contact|\n|email|string|query|email address|\n|is_primary|string|query|boolean indicating whether or not the contact is identified as primary|\n|name|string|query|contact name|\n|phone|string|query|contact phone|\n|title|string|query|contact title|\n\nThe 'equal-to' filters will only find exact matches for the filter requested.  Partial names and non-exact matches will not be returned.\n\nExample URL w/ query params:\n```\n{{host}}/api/v1/contacts/customer?name=sprite\n```\n\n## String-starts-with filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|customer_name_prefix|string|query|customer name associated with contact|\n|email_prefix|string|query|email address|\n|name_prefix|string|query|contact name|\n|title_prefix|string|query|contact title|\n\nThe 'string-starts-with' filters will return all customers where the 'name_prefix' string value matches the first characters exactly for the customer name\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/alerts?name_prefix=AEP\n```\n\n## String-contains filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|customer_name_search|string|query|customer name associated with contact|\n|email_search|string|query|email address|\n|name_search|string|query|contact name|\n|title_search|string|query|contact title|\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/alerts?name_search=tion\n```\n\n## Order-by sorting\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|comment|string|query|comment|\n|customer_id|string|query|customer_id associated with contact|\n|customer_name|string|query|customer name associated with contact|\n|email|string|query|email address|\n|is_primary|string|query|boolean indicating whether or not the contact is identified as primary|\n|name|string|query|contact name|\n|phone|string|query|contact phone|\n|title|string|query|contact title|\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/contacts/customer?order_by=asc:name\n```\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/contacts/customer?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/contacts/customer?offset=2\n```"
          },
          "response": [
            {
              "id": "5c93402b-6e47-481d-9edd-d1c6748bdf63",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:18:08 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnYOXwucDC8-wAAABC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "3e7c321a-24f2-468b-8732-125ead9c8676",
              "name": "200 OK - No results found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:20:43 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnhQkaYPjqi60AAACC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "6dae81bb-4025-4d20-a34f-18ed1ff5cf5c",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "296"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:24:15 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcntjkrdJDQ5ckAAAFB"
                },
                {
                  "key": "x-total-count",
                  "value": "1"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer_contacts\": [\n            {\n                \"customer_contact\": {\n                    \"comment\": \"comment here\",\n                    \"customer\": {\n                        \"id\": 1,\n                        \"ref\": \"/api/v1/customers/1\"\n                    },\n                    \"email\": \"a@a.com\",\n                    \"id\": 2,\n                    \"is_primary\": true,\n                    \"name\": \"name here\",\n                    \"phone\": \"2345678902\",\n                    \"ref\": \"/api/v1/contacts/customer/2\",\n                    \"title\": \"title here\"\n                }\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "16b56d57-3c95-46d1-b87f-cccf9499e8e9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/contacts/customer/3",
            "description": "Get a specific customer contact."
          },
          "response": [
            {
              "id": "e2364552-4348-428e-b3f0-6683e9dd6633",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer/3"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:18:30 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnZhTpLZhDpzwAAAYJ"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "fd37ca26-83fe-4a67-b38c-124375faa075",
              "name": "404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer/3"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "74"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:20:28 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcngZR7hMjgb_gAAACB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Unable to retrieve customer_contact\",\n    \"success\": true\n}"
            },
            {
              "id": "170da851-27e9-4878-91c6-7c1083f46815",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer/2"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "311"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:24:01 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnsxUYh4A2QN4AAAEB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer_contact\": {\n            \"comment\": \"comment here\",\n            \"customer\": {\n                \"id\": 1,\n                \"ref\": \"/api/v1/customers/1\"\n            },\n            \"email\": \"a@a.com\",\n            \"id\": 2,\n            \"is_primary\": true,\n            \"name\": \"name here\",\n            \"phone\": \"2345678902\",\n            \"ref\": \"/api/v1/contacts/customer/2\",\n            \"title\": \"title here\"\n        }\n    },\n    \"message\": \"customer_contact retrieved successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "delete",
          "_postman_id": "08e4b139-43f7-4d6c-a332-afbd77480059",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/contacts/customer/1",
            "description": "Delete a specific customer contact.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|id|number|path|id|yes|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/contacts/customer/{{id}}\n```"
          },
          "response": [
            {
              "id": "7d56f568-cf68-4590-aa2b-b63a4f204532",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer/1"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:18:42 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnaNNJWDj-qaMAAAZJ"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "193c4771-e717-40dc-a449-94ccb4970531",
              "name": "200 OK - Delete",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer/1"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "76"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:23:22 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "Flcnqjgtc2DpNS8AAANF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"customer_contact deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "133715d9-cda0-4d62-abd0-e388179860c8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"udpated comment\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name there\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/contacts/customer/3",
            "description": "Update a specific customer contact.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|comment|string|query|comment|\n|customer_id|string|query|customer_id associated with contact|\n|email|string|query|email address|\n|is_primary|string|query|boolean indicating whether or not the contact is identified as primary|\n|name|string|query|contact name|\n|phone|string|query|contact phone|\n|title|string|query|contact title|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/contacts/customer/{{id}}\n```"
          },
          "response": [
            {
              "id": "3af9b392-b892-4984-80a5-5c46483f96a8",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"udpated comment\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name there\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/contacts/customer/3"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:18:54 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "Flcna5wE5MDM5HcAAAAB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "8b34c7dd-b15b-41cd-9800-b1838e73c886",
              "name": "404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"udpated comment\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name there\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/contacts/customer/3"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "111"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:20:10 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnfV5ZhRB6H3UAAALF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 404,\n    \"errors\": \"Not found\",\n    \"message\": \"Unable to update customer_contact\",\n    \"success\": false\n}"
            },
            {
              "id": "5c3f00dc-6fca-4d0d-a1df-49a6689ec29c",
              "name": "200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"udpated comment\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name there\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/contacts/customer/1"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "313"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:22:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnpL8PFHB43hoAAAAG"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer_contact\": {\n            \"comment\": \"udpated comment\",\n            \"customer\": {\n                \"id\": 1,\n                \"ref\": \"/api/v1/customers/1\"\n            },\n            \"email\": \"a@a.com\",\n            \"id\": 1,\n            \"is_primary\": true,\n            \"name\": \"name there\",\n            \"phone\": \"2345678902\",\n            \"ref\": \"/api/v1/contacts/customer/1\",\n            \"title\": \"title here\"\n        }\n    },\n    \"message\": \"customer_contact updated successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "2f12f55c-b1b7-4b3b-b09e-347f12264760",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"comment here\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name here\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/contacts/customer",
            "description": "Update a specific customer contact.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|comment|string|query|comment|\n|customer_id|string|query|customer_id associated with contact|\n|email|string|query|email address|\n|is_primary|string|query|boolean indicating whether or not the contact is identified as primary|\n|name|string|query|contact name|\n|phone|string|query|contact phone|\n|title|string|query|contact title|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/contacts/customer/{{id}}\n```"
          },
          "response": [
            {
              "id": "a5d91909-3ef6-49ce-aa01-fec10ca9e1b6",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"comment here\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name here\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:19:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnbrRX1tgqlpgAAABH"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "4f410210-6a03-4df5-8fc2-e4c7e76928a9",
              "name": "422 Unprocessable Entity",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"comment here\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "Unprocessable Entity",
              "code": 422,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "124"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:21:14 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnjFzl-hBqUnkAAADB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 422,\n    \"errors\": \"name: can't be blank, \",\n    \"message\": \"Unable to create customer_contact\",\n    \"success\": false\n}"
            },
            {
              "id": "71577871-5070-4bf6-8ad2-fe2ee1baad31",
              "name": "200 OK",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"comment here\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name here\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "272"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:21:33 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnkLVi9WhYHbUAAAAI"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer_contact\": {\n            \"comment\": \"comment here\",\n            \"customer\": {\n                \"id\": 1,\n                \"ref\": \"/api/v1/customers/1\"\n            },\n            \"email\": \"a@a.com\",\n            \"id\": 1,\n            \"is_primary\": true,\n            \"name\": \"name here\",\n            \"phone\": \"2345678902\",\n            \"ref\": \"/api/v1/contacts/customer/1\",\n            \"title\": \"title here\"\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        }
      ],
      "_postman_id": "1477e9fd-d452-4316-8172-379edcccd639",
      "description": "## Description\nThe Customer Contacts API enables you to manage alerts using the REST API.  This API is available for authenticated users, including OAuth apps.  Access token is required and user must have generic api_access enabled and 'user' permissions to the appropriate 'api_user_authorizations' entries for the customer endpoints.\n\n## Model\n| Key | Format | Description | Auto-generated? | Required? | Minimum | Maximum\n| --- | --- | --- | --- | --- | --- | ---\n|id|integer|id (auto-generated)|yes|n/a|n/a|n/a\n|comment|string|comment associated with contact|no|yes|5|1000\n|email|string|contact email|no|yes|6|254\n|is_primary|boolean|defines 'if' the contact is primary for the customer|no|yes||\n|name|string|contact name|no|yes|5|255\n|phone|string|contact phone number|no|no|n/a|30\n|title|string|contact title|no|no|5|255\n|customer_id|integer|customer id contact is associated|no|yes|n/a|n/a\n|inserted_at|datetime|determined by the DBMS|yes|n/a\n|updated_at|datetime|determined by the DBMS|yes|n/a",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "0b4d4e91-9355-4cfd-9579-1a4d1e9e2183",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "dd191a3b-484f-4be3-aabf-2d4bee806f4f",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "project_contacts",
      "item": [
        {
          "name": "list",
          "_postman_id": "8d231d2c-d934-4f4f-9928-dbb7ac4b4f7e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/contacts/customer",
            "description": "Lists all alerts.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|Setting to Access Token is required|\n\n## Equal-to filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|comment|string|query|comment|\n|project_id|string|query|project_id associated with contact|\n|project_name|string|query|project name associated with contact|\n|email|string|query|email address|\n|is_primary|string|query|boolean indicating whether or not the contact is identified as primary|\n|name|string|query|contact name|\n|phone|string|query|contact phone|\n|title|string|query|contact title|\n\nThe 'equal-to' filters will only find exact matches for the filter requested.  Partial names and non-exact matches will not be returned.\n\nExample URL w/ query params:\n```\n{{host}}/api/v1/contacts/project?name=sprite\n```\n\n## String-starts-with filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|project_name_prefix|string|query|project name associated with contact|\n|email_prefix|string|query|email address|\n|name_prefix|string|query|contact name|\n|title_prefix|string|query|contact title|\n\nThe 'string-starts-with' filters will return all projects where the 'name_prefix' string value matches the first characters exactly for the project name\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/alerts?name_prefix=AEP\n```\n\n## String-contains filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|project_name_search|string|query|project name associated with contact|\n|email_search|string|query|email address|\n|name_search|string|query|contact name|\n|title_search|string|query|contact title|\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/alerts?name_search=tion\n```\n\n## Order-by sorting\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|comment|string|query|comment|\n|project_id|string|query|project_id associated with contact|\n|project_name|string|query|project name associated with contact|\n|email|string|query|email address|\n|is_primary|string|query|boolean indicating whether or not the contact is identified as primary|\n|name|string|query|contact name|\n|phone|string|query|contact phone|\n|title|string|query|contact title|\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/contacts/project?order_by=asc:name\n```\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/contacts/project?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/contacts/project?offset=2\n```"
          },
          "response": [
            {
              "id": "a98e5343-ce10-4eb4-bb2e-382631c920c5",
              "name": "200 OK - No results found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:19:38 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "Flcndd9_EGhtlCsAAADE"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "c31a01eb-8eb5-44be-816c-e4a74f02e5b3",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "296"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:24:27 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnuQhZm8hCKvYAAAGB"
                },
                {
                  "key": "x-total-count",
                  "value": "1"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer_contacts\": [\n            {\n                \"customer_contact\": {\n                    \"comment\": \"comment here\",\n                    \"customer\": {\n                        \"id\": 1,\n                        \"ref\": \"/api/v1/customers/1\"\n                    },\n                    \"email\": \"a@a.com\",\n                    \"id\": 2,\n                    \"is_primary\": true,\n                    \"name\": \"name here\",\n                    \"phone\": \"2345678902\",\n                    \"ref\": \"/api/v1/contacts/customer/2\",\n                    \"title\": \"title here\"\n                }\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "dca0407c-2e9e-4e53-86e2-054f0b4738b7",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:17:25 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnVs44v9C1Qd8AAAAH"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "count",
          "_postman_id": "c69b09db-b974-4cc1-ba8d-be69cc2d175a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/contacts/customer",
            "description": "Lists all alerts.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|Setting to Access Token is required|\n\n## Equal-to filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|comment|string|query|comment|\n|project_id|string|query|project_id associated with contact|\n|project_name|string|query|project name associated with contact|\n|email|string|query|email address|\n|is_primary|string|query|boolean indicating whether or not the contact is identified as primary|\n|name|string|query|contact name|\n|phone|string|query|contact phone|\n|title|string|query|contact title|\n\nThe 'equal-to' filters will only find exact matches for the filter requested.  Partial names and non-exact matches will not be returned.\n\nExample URL w/ query params:\n```\n{{host}}/api/v1/contacts/project?name=sprite\n```\n\n## String-starts-with filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|project_name_prefix|string|query|project name associated with contact|\n|email_prefix|string|query|email address|\n|name_prefix|string|query|contact name|\n|title_prefix|string|query|contact title|\n\nThe 'string-starts-with' filters will return all projects where the 'name_prefix' string value matches the first characters exactly for the project name\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/alerts?name_prefix=AEP\n```\n\n## String-contains filters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|project_name_search|string|query|project name associated with contact|\n|email_search|string|query|email address|\n|name_search|string|query|contact name|\n|title_search|string|query|contact title|\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/alerts?name_search=tion\n```\n\n## Order-by sorting\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|comment|string|query|comment|\n|project_id|string|query|project_id associated with contact|\n|project_name|string|query|project name associated with contact|\n|email|string|query|email address|\n|is_primary|string|query|boolean indicating whether or not the contact is identified as primary|\n|name|string|query|contact name|\n|phone|string|query|contact phone|\n|title|string|query|contact title|\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/contacts/project?order_by=asc:name\n```\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/contacts/project?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/contacts/project?offset=2\n```"
          },
          "response": [
            {
              "id": "239105f3-46b4-4e86-8524-0fb7aa51913a",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "296"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:24:15 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcntjkrdJDQ5ckAAAFB"
                },
                {
                  "key": "x-total-count",
                  "value": "1"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer_contacts\": [\n            {\n                \"customer_contact\": {\n                    \"comment\": \"comment here\",\n                    \"customer\": {\n                        \"id\": 1,\n                        \"ref\": \"/api/v1/customers/1\"\n                    },\n                    \"email\": \"a@a.com\",\n                    \"id\": 2,\n                    \"is_primary\": true,\n                    \"name\": \"name here\",\n                    \"phone\": \"2345678902\",\n                    \"ref\": \"/api/v1/contacts/customer/2\",\n                    \"title\": \"title here\"\n                }\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "d672ee01-2222-4e42-a442-d41afc5f9fdb",
              "name": "200 OK - No results found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:20:43 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnhQkaYPjqi60AAACC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "e39d9c61-2285-4eaf-887d-38d914605164",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:18:08 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnYOXwucDC8-wAAABC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "21c694c2-59dc-4e33-a3d3-0510140e15e1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/contacts/customer/3",
            "description": "Get a specific project contact.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required|\n|id|number|path|contact id|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/contacts/project/1\n```"
          },
          "response": [
            {
              "id": "057272a3-4f3b-43ec-928a-aa721b353a2e",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer/3"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:18:30 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnZhTpLZhDpzwAAAYJ"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "64bac73f-586a-4856-b05e-85754e3a62f5",
              "name": "404 Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer/3"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "74"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:20:28 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcngZR7hMjgb_gAAACB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Unable to retrieve customer_contact\",\n    \"success\": true\n}"
            },
            {
              "id": "81ca9ab3-a7aa-4fa3-ae02-f840c0a18954",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer/2"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "311"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:24:01 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnsxUYh4A2QN4AAAEB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer_contact\": {\n            \"comment\": \"comment here\",\n            \"customer\": {\n                \"id\": 1,\n                \"ref\": \"/api/v1/customers/1\"\n            },\n            \"email\": \"a@a.com\",\n            \"id\": 2,\n            \"is_primary\": true,\n            \"name\": \"name here\",\n            \"phone\": \"2345678902\",\n            \"ref\": \"/api/v1/contacts/customer/2\",\n            \"title\": \"title here\"\n        }\n    },\n    \"message\": \"customer_contact retrieved successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "delete",
          "_postman_id": "ebb25bc8-bede-4a36-81fb-2bcb7f363270",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/contacts/customer/1",
            "description": "Delete a specific customer contact.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|id|number|path|id|yes|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/contacts/customer/{{id}}\n```"
          },
          "response": [
            {
              "id": "6e0e0f1e-110a-4718-8bf7-08d71e3b9312",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer/1"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:18:42 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnaNNJWDj-qaMAAAZJ"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "76b719f8-4116-4b86-890d-a662dc40189e",
              "name": "200 OK - Delete",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/contacts/customer/1"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "76"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:23:22 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "Flcnqjgtc2DpNS8AAANF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"customer_contact deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "0811ddbb-9212-4ace-83d0-48fc61d70f6a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"udpated comment\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name there\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/contacts/customer/3",
            "description": "Update a specific customer contact.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|comment|string|query|comment|\n|customer_id|string|query|customer_id associated with contact|\n|email|string|query|email address|\n|is_primary|string|query|boolean indicating whether or not the contact is identified as primary|\n|name|string|query|contact name|\n|phone|string|query|contact phone|\n|title|string|query|contact title|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/contacts/customer/{{id}}\n```"
          },
          "response": [
            {
              "id": "18592117-cc31-4853-978b-ea83b4c7cc0c",
              "name": "404 Not Found",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"udpated comment\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name there\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/contacts/customer/3"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "111"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:20:10 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnfV5ZhRB6H3UAAALF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 404,\n    \"errors\": \"Not found\",\n    \"message\": \"Unable to update customer_contact\",\n    \"success\": false\n}"
            },
            {
              "id": "3438bac7-0915-43a2-8ab1-9870f916b1b6",
              "name": "200 OK",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"udpated comment\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name there\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/contacts/customer/1"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "313"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:22:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnpL8PFHB43hoAAAAG"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer_contact\": {\n            \"comment\": \"udpated comment\",\n            \"customer\": {\n                \"id\": 1,\n                \"ref\": \"/api/v1/customers/1\"\n            },\n            \"email\": \"a@a.com\",\n            \"id\": 1,\n            \"is_primary\": true,\n            \"name\": \"name there\",\n            \"phone\": \"2345678902\",\n            \"ref\": \"/api/v1/contacts/customer/1\",\n            \"title\": \"title here\"\n        }\n    },\n    \"message\": \"customer_contact updated successfully\",\n    \"success\": true\n}"
            },
            {
              "id": "f22f803b-ed24-4329-ac70-e39e58619e66",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"udpated comment\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name there\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/contacts/customer/3"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:18:54 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "Flcna5wE5MDM5HcAAAAB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "f3e1d0c9-f17d-47a7-9877-d78a4b92fd38",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"comment here\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name here\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/contacts/customer",
            "description": "Update a specific customer contact.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|comment|string|query|comment|\n|customer_id|string|query|customer_id associated with contact|\n|email|string|query|email address|\n|is_primary|string|query|boolean indicating whether or not the contact is identified as primary|\n|name|string|query|contact name|\n|phone|string|query|contact phone|\n|title|string|query|contact title|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/contacts/customer/{{id}}\n```"
          },
          "response": [
            {
              "id": "6d483cb1-a859-4337-820e-46f005ced9b0",
              "name": "401 Unauthorized - Not Authenticated",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"comment here\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name here\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "137"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:19:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnbrRX1tgqlpgAAABH"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"Sorry, your account cannot be accessed at this time\",\n    \"success\": false\n}"
            },
            {
              "id": "e46c162f-7cbe-42bc-b0c4-76fbe7fcf51b",
              "name": "200 OK",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"comment here\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"name\": \"name here\",\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "272"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:21:33 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnkLVi9WhYHbUAAAAI"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"customer_contact\": {\n            \"comment\": \"comment here\",\n            \"customer\": {\n                \"id\": 1,\n                \"ref\": \"/api/v1/customers/1\"\n            },\n            \"email\": \"a@a.com\",\n            \"id\": 1,\n            \"is_primary\": true,\n            \"name\": \"name here\",\n            \"phone\": \"2345678902\",\n            \"ref\": \"/api/v1/contacts/customer/1\",\n            \"title\": \"title here\"\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "ef1dc7cd-c36c-4e32-ac8d-23178fc92517",
              "name": "422 Unprocessable Entity",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customer_contact\": {\n        \"comment\": \"comment here\",\n        \"email\": \"a@a.com\",\n        \"is_primary\": true,\n        \"phone\": \"2345678902\",\n        \"title\": \"title here\",\n        \"customer_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/contacts/customer"
              },
              "status": "Unprocessable Entity",
              "code": 422,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "124"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 04 Jan 2021 22:21:14 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FlcnjFzl-hBqUnkAAADB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 422,\n    \"errors\": \"name: can't be blank, \",\n    \"message\": \"Unable to create customer_contact\",\n    \"success\": false\n}"
            }
          ]
        }
      ],
      "_postman_id": "5663b25a-f4d2-4432-be75-6f5af89158ff",
      "description": "## Description\nThe Project Contacts API enables you to manage alerts using the REST API.  This API is available for authenticated users, including OAuth apps.  Access token is required and user must have generic api_access enabled and 'user' permissions to the appropriate 'api_user_authorizations' entries for the project contact endpoints.\n\n## Model\n| Key | Format | Description | Auto-generated? | Required? | Minimum | Maximum\n| --- | --- | --- | --- | --- | --- | ---\n|id|integer|id (auto-generated)|yes|n/a|n/a|n/a\n|comment|string|comment associated with contact|no|yes|5|1000\n|email|string|contact email|no|yes|6|254\n|is_primary|boolean|defines 'if' the contact is primary for the project|no|yes||\n|name|string|contact name|no|yes|5|255\n|phone|string|contact phone number|no|no|n/a|30\n|title|string|contact title|no|no|5|255\n|project_id|integer|project id contact is associated|no|yes|n/a|n/a\n|inserted_at|datetime|determined by the DBMS|yes|n/a\n|updated_at|datetime|determined by the DBMS|yes|n/a",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "b58ff83b-365b-4bf6-8c66-3cdca0d121c5",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "60fc9ccb-e6cf-4166-a75e-a2609f7260b2",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "projects",
      "item": [
        {
          "name": "list",
          "_postman_id": "22429922-0b18-46da-a40b-742c99df2c41",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/projects?customer_ids=1",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "projects"
              ],
              "query": [
                {
                  "key": "customer_ids",
                  "value": "1"
                }
              ]
            },
            "description": "List all projects.\n\n## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?effective_date=2020-09-23T01:21:15.574094Z\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?name=sprite\n```\nThe following filters are supported:\n\n* `customer_name` (actual field is `customer.name)`\n* `description`\n* `fixed_bid_price`\n* `amount`\n* `last_validated_date`\n* `name`\n* `pid`\n* `region_name` (actual field is `region.name)`\n* `status`\n* `billing_type`\n* `validated`\n* `effective_date`\n* `customer_ids`\n* `position_ids`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/projects?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`fixed_bid_price_lt` | `fixed_bid_price`\n`amount_lt` | `amount`\n`last_validated_date_lt` | `last_validate_date`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/projects?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`fixed_bid_price_gte` | `fixed_bid_price`\n`amount_gte` | `amount`\n`last_validated_date_gte` | `last_validate_date`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?name_prefix=posit\n```\n\nThe following filter names are supported:\n\n* `customer_prefix` (actual field is `customer.name)`\n* `name_prefix` (actual field is `project.name)`\n* `region_prefix` (actual field is `region.name)`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?name_search=tion\n```\n\nThe following filter names are supported:\n\n* `customer_search` (actual field is `customer.name)`\n* `name_search` (actual field is `name)`\n* `region_search` (actual field is `region.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `pid`\n* `description`\n* `status`\n* `billing_type`\n* `validated`\n* `fixed_bid_price`\n* `amount`\n* `last_validated_date`\n* `customer_name` (actual field is `customer.name)`\n* `region_name` (actual field is `region.name)`\n\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?offset=2\n```\n\n## Position Date filter\n\nThe `position_date` filter will filter projects based on start_date/end_date of associated positions.  If an associated position is active, based on the supplied date, the parent project will be included in the result.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?position_date=2020-12-01\n```\n\n## Project Ids filter\n\nThe `project_ids` filter will filter projects based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a projection.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?project_ids=1,2,3\n```\n\n## Customer Ids filter\n\nThe `customer_ids` filter will filter customers based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a projection.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?customer_ids=1,2,3\n```"
          },
          "response": [
            {
              "id": "cfae947a-1798-48e3-a91d-ce28dea0a6dc",
              "name": "Search (200 OK)",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/projects"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "510"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Sun, 29 Nov 2020 21:10:13 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FkwWx53XvSizqfIAAAYC"
                },
                {
                  "key": "x-total-count",
                  "value": "1"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"projects\": [\n            {\n                \"project\": {\n                    \"amount\": \"100.00\",\n                    \"billing_type\": \"Time and Materials\",\n                    \"contacts\": [],\n                    \"customer\": {\n                        \"name\": \"Block of Hours2\",\n                        \"ref\": \"/api/v1/customers/1\"\n                    },\n                    \"deleted_date\": null,\n                    \"description\": null,\n                    \"effective_end_date\": null,\n                    \"effective_start_date\": \"2020-11-22T02:15:11.123110Z\",\n                    \"end_date\": \"2020-06-01\",\n                    \"fixed_bid_price\": null,\n                    \"id\": 1,\n                    \"name\": \"Falling Sabre R&D\",\n                    \"pid\": 1,\n                    \"ref\": \"/api/v1/projects/1\",\n                    \"region\": \"test\",\n                    \"start_date\": \"2020-05-01\",\n                    \"status\": \"Draft\",\n                    \"validated\": false\n                }\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "ids",
          "_postman_id": "1929be5e-8d97-4812-97da-f30e1fce4131",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/projects/ids",
            "description": "List of projects ids, based on query filters.\n\n## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?name=sprite\n```\nThe following filters are supported:\n\n* `customer_name` (actual field is `customer.name)`\n* `description`\n* `fixed_bid_price`\n* `amount`\n* `last_validated_date`\n* `name`\n* `pid`\n* `region_name` (actual field is `region.name)`\n* `status`\n* `billing_type`\n* `validated`\n* `effective_date`\n* `customer_ids`\n* `position_ids`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/projects?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`fixed_bid_price_lt` | `fixed_bid_price`\n`amount_lt` | `amount`\n`last_validated_date_lt` | `last_validate_date`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/projects?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`fixed_bid_price_gte` | `fixed_bid_price`\n`amount_gte` | `amount`\n`last_validated_date_gte` | `last_validate_date`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?name_prefix=posit\n```\n\nThe following filter names are supported:\n\n* `customer_prefix` (actual field is `customer.name)`\n* `name_prefix` (actual field is `project.name)`\n* `region_prefix` (actual field is `region.name)`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?name_search=tion\n```\n\nThe following filter names are supported:\n\n* `customer_search` (actual field is `customer.name)`\n* `name_search` (actual field is `name)`\n* `region_search` (actual field is `region.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `pid`\n* `description`\n* `status`\n* `billing_type`\n* `validated`\n* `fixed_bid_price`\n* `amount`\n* `last_validated_date`\n* `customer_name` (actual field is `customer.name)`\n* `region_name` (actual field is `region.name)`\n\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?offset=2\n```\n\n## Position Date filter\n\nThe `position_date` filter will filter projects based on start_date/end_date of associated positions.  If an associated position is active, based on the supplied date, the parent project will be included in the result.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?position_date=2020-12-01\n```\n\n## Project Ids filter\n\nThe `project_ids` filter will filter projects based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a projection.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?project_ids=1,2,3\n```\n\n## Customer Ids filter\n\nThe `customer_ids` filter will filter customers based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a projection.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?customer_ids=1,2,3\n```"
          },
          "response": [
            {
              "id": "3dd4fd24-9606-4b6c-a5e5-f2d33b509315",
              "name": "Search (200 OK)",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/projects"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "510"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Sun, 29 Nov 2020 21:10:13 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FkwWx53XvSizqfIAAAYC"
                },
                {
                  "key": "x-total-count",
                  "value": "1"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"projects\": [\n            {\n                \"project\": {\n                    \"amount\": \"100.00\",\n                    \"billing_type\": \"Time and Materials\",\n                    \"contacts\": [],\n                    \"customer\": {\n                        \"name\": \"Block of Hours2\",\n                        \"ref\": \"/api/v1/customers/1\"\n                    },\n                    \"deleted_date\": null,\n                    \"description\": null,\n                    \"effective_end_date\": null,\n                    \"effective_start_date\": \"2020-11-22T02:15:11.123110Z\",\n                    \"end_date\": \"2020-06-01\",\n                    \"fixed_bid_price\": null,\n                    \"id\": 1,\n                    \"name\": \"Falling Sabre R&D\",\n                    \"pid\": 1,\n                    \"ref\": \"/api/v1/projects/1\",\n                    \"region\": \"test\",\n                    \"start_date\": \"2020-05-01\",\n                    \"status\": \"Draft\",\n                    \"validated\": false\n                }\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "search_plus_projection",
          "_postman_id": "78ae8cbe-feb8-462f-af26-77b3d8afeef2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/projects/plus_projection",
            "description": "Search based on query filters.  Response will include project for each included project.\n\n## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?name=sprite\n```\nThe following filters are supported:\n\n* `customer_name` (actual field is `customer.name)`\n* `description`\n* `fixed_bid_price`\n* `amount`\n* `last_validated_date`\n* `name`\n* `pid`\n* `region_name` (actual field is `region.name)`\n* `status`\n* `billing_type`\n* `validated`\n* `customer_ids`\n* `position_ids`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/projects?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`fixed_bid_price_lt` | `fixed_bid_price`\n`amount_lt` | `amount`\n`last_validated_date_lt` | `last_validate_date`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/projects?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`fixed_bid_price_gte` | `fixed_bid_price`\n`amount_gte` | `amount`\n`last_validated_date_gte` | `last_validate_date`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?name_prefix=posit\n```\n\nThe following filter names are supported:\n\n* `customer_prefix` (actual field is `customer.name)`\n* `name_prefix` (actual field is `project.name)`\n* `region_prefix` (actual field is `region.name)`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?name_search=tion\n```\n\nThe following filter names are supported:\n\n* `customer_search` (actual field is `customer.name)`\n* `name_search` (actual field is `name)`\n* `region_search` (actual field is `region.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `pid`\n* `description`\n* `status`\n* `billing_type`\n* `validated`\n* `fixed_bid_price`\n* `amount`\n* `last_validated_date`\n* `customer_name` (actual field is `customer.name)`\n* `region_name` (actual field is `region.name)`\n\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?offset=2\n```\n\n## Position Date filter\n\nThe `position_date` filter will filter projects based on start_date/end_date of associated positions.  If an associated position is active, based on the supplied date, the parent project will be included in the result.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?position_date=2020-12-01\n```\n\n## Project Ids filter\n\nThe `project_ids` filter will filter projects based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a result.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?project_ids=1,2,3\n```\n\n## Customer Ids filter\n\nThe `customer_ids` filter will filter projects based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a result.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?customer_ids=1,2,3\n```"
          },
          "response": [
            {
              "id": "2e6c7d23-7c9b-4aad-9e6b-ef364d434ebe",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/projects/plus_projection"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Thu, 03 Dec 2020 02:06:39 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Server",
                  "value": "nginx/1.17.7"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "strict-transport-security",
                  "value": "max-age=31536000"
                },
                {
                  "key": "x-request-id",
                  "value": "1d10195f7c015f3754cf767866e67590"
                },
                {
                  "key": "x-total-count",
                  "value": "1"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"projects\": [\n            {\n                \"project\": {\n                    \"amount\": null,\n                    \"billing_type\": \"Time and Materials\",\n                    \"contacts\": [],\n                    \"customer\": {\n                        \"name\": \"updated customer\",\n                        \"ref\": \"/api/v1/customers/1\"\n                    },\n                    \"deleted_date\": null,\n                    \"description\": null,\n                    \"effective_end_date\": null,\n                    \"effective_start_date\": \"2020-11-22T03:17:46.341055Z\",\n                    \"end_date\": \"2020-06-01\",\n                    \"fixed_bid_price\": null,\n                    \"id\": 3,\n                    \"name\": \"Falling Sabre R&D\",\n                    \"pid\": 3,\n                    \"projection\": {\n                        \"cost\": \"17600.00\",\n                        \"gross_margin\": \"0.00\",\n                        \"margin_change_log_message\": \"valid message goes here\",\n                        \"percent_gross_margin\": \"0.00\",\n                        \"project_id\": 3,\n                        \"revenue\": \"17600.00\",\n                        \"total_contract_cost\": \"0.00\",\n                        \"total_direct_cost\": \"17600.00\",\n                        \"total_expenses\": \"0.00\",\n                        \"total_open_positions_cost\": \"0.00\",\n                        \"valid_monthly_projections\": [\n                            {\n                                \"projection\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"16800.00\",\n                                    \"direct_cost\": \"16800.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 5,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"revenue\": \"16800.00\",\n                                    \"validated_monthly_positions\": [\n                                        {\n                                            \"validated_monthly_position\": {\n                                                \"contract_cost\": \"0.00\",\n                                                \"cost\": \"16800.00\",\n                                                \"direct_cost\": \"16800.00\",\n                                                \"expenses\": \"0.00\",\n                                                \"month\": 5,\n                                                \"open_positions_cost\": \"0.00\",\n                                                \"position\": {\n                                                    \"name\": \"position1\",\n                                                    \"ref\": \"/api/v1/positions/1\"\n                                                },\n                                                \"revenue\": \"16800.00\",\n                                                \"year\": 2020\n                                            }\n                                        }\n                                    ],\n                                    \"year\": 2020\n                                }\n                            },\n                            {\n                                \"projection\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"800.00\",\n                                    \"direct_cost\": \"800.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 6,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"revenue\": \"800.00\",\n                                    \"validated_monthly_positions\": [\n                                        {\n                                            \"validated_monthly_position\": {\n                                                \"contract_cost\": \"0.00\",\n                                                \"cost\": \"800.00\",\n                                                \"direct_cost\": \"800.00\",\n                                                \"expenses\": \"0.00\",\n                                                \"month\": 6,\n                                                \"open_positions_cost\": \"0.00\",\n                                                \"position\": {\n                                                    \"name\": \"position1\",\n                                                    \"ref\": \"/api/v1/positions/2\"\n                                                },\n                                                \"revenue\": \"800.00\",\n                                                \"year\": 2020\n                                            }\n                                        }\n                                    ],\n                                    \"year\": 2020\n                                }\n                            }\n                        ]\n                    },\n                    \"ref\": \"/api/v1/projects/3\",\n                    \"region\": \"test\",\n                    \"start_date\": \"2020-05-01\",\n                    \"status\": \"Draft\",\n                    \"validated\": true\n                }\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "count",
          "_postman_id": "3a79df8c-c692-4845-adf4-0564b4ebae02",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/projects/count",
            "description": "Return count of projects matching query filters.\n\n# Count\n\nWill return the total number of records based on the supplied query params.  The total record count will be returned in the following response header `x-total-count`.\n\n## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?name=sprite\n```\nThe following filters are supported:\n\n* `customer_name` (actual field is `customer.name)`\n* `description`\n* `fixed_bid_price`\n* `amount`\n* `last_validated_date`\n* `name`\n* `pid`\n* `region_name` (actual field is `region.name)`\n* `status`\n* `billing_type`\n* `validated`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/projects?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`fixed_bid_price_lt` | `fixed_bid_price`\n`amount_lt` | `amount`\n`last_validated_date_lt` | `last_validate_date`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/projects?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`fixed_bid_price_gte` | `fixed_bid_price`\n`amount_gte` | `amount`\n`last_validated_date_gte` | `last_validate_date`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?name_prefix=posit\n```\n\nThe following filter names are supported:\n\n* `customer_prefix` (actual field is `customer.name)`\n* `name_prefix` (actual field is `project.name)`\n* `region_prefix` (actual field is `region.name)`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?name_search=tion\n```\n\nThe following filter names are supported:\n\n* `customer_search` (actual field is `customer.name)`\n* `name_search` (actual field is `name)`\n* `region_search` (actual field is `region.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `pid`\n* `description`\n* `status`\n* `billing_type`\n* `validated`\n* `fixed_bid_price`\n* `amount`\n* `last_validated_date`\n* `customer_name` (actual field is `customer.name)`\n* `region_name` (actual field is `region.name)`\n\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projects?offset=2\n```"
          },
          "response": [
            {
              "id": "f4d88cda-6125-421b-96e3-c725cf8be1f5",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/projects/count"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "29"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 01 Dec 2020 02:27:25 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "Fkx2q3LAj-ACMQkAAAjB"
                },
                {
                  "key": "x-total-count",
                  "value": "2"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "a8aaaaee-13c2-4900-96ec-2c4c85551d9d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/projects/24",
            "description": "Gets a specific project.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required|\n|id|number|path|project id|\n\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/projects/1\n```"
          },
          "response": []
        },
        {
          "name": "status values",
          "_postman_id": "0141ece2-3d62-4c51-b13b-83cd712d8dde",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/projects/status_values"
          },
          "response": []
        },
        {
          "name": "validation status",
          "_postman_id": "ea2f6b95-5332-4525-a18e-b14de6215a09",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/projects/24/validation_status"
          },
          "response": []
        },
        {
          "name": "latest_validation",
          "_postman_id": "11945911-e31e-4ded-a082-c9da9e2c45fd",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/projects/24/latest_validation"
          },
          "response": []
        },
        {
          "name": "projection",
          "_postman_id": "622e816c-e023-42c0-a95e-ac528f2971f1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/projects/1/projection"
          },
          "response": [
            {
              "id": "94e7fef8-e24d-4544-8acf-005e90bca2e5",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/projects/2/projection"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "7860"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 30 Nov 2020 15:28:57 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FkxSvMAgdJQC7rwAAAjB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"projection\": {\n            \"cost\": \"314600.00\",\n            \"gross_margin\": \"0.00\",\n            \"margin_change_log_message\": \"valid message goes here\",\n            \"percent_gross_margin\": \"0.00\",\n            \"project_id\": 2,\n            \"revenue\": \"314600.00\",\n            \"total_contract_cost\": \"0.00\",\n            \"total_direct_cost\": \"314600.00\",\n            \"total_expenses\": \"0.00\",\n            \"total_open_positions_cost\": \"0.00\",\n            \"valid_monthly_projections\": [\n                {\n                    \"projection\": {\n                        \"contract_cost\": \"0.00\",\n                        \"cost\": \"18400.00\",\n                        \"direct_cost\": \"18400.00\",\n                        \"expenses\": \"0.00\",\n                        \"month\": 1,\n                        \"open_positions_cost\": \"0.00\",\n                        \"revenue\": \"18400.00\",\n                        \"validated_monthly_positions\": [\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"18400.00\",\n                                    \"direct_cost\": \"18400.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 1,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position3\",\n                                        \"ref\": \"/api/v1/positions/11\"\n                                    },\n                                    \"revenue\": \"18400.00\",\n                                    \"year\": 2020\n                                }\n                            }\n                        ],\n                        \"year\": 2020\n                    }\n                },\n                {\n                    \"projection\": {\n                        \"contract_cost\": \"0.00\",\n                        \"cost\": \"16000.00\",\n                        \"direct_cost\": \"16000.00\",\n                        \"expenses\": \"0.00\",\n                        \"month\": 2,\n                        \"open_positions_cost\": \"0.00\",\n                        \"revenue\": \"16000.00\",\n                        \"validated_monthly_positions\": [\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"16000.00\",\n                                    \"direct_cost\": \"16000.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 2,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position3\",\n                                        \"ref\": \"/api/v1/positions/12\"\n                                    },\n                                    \"revenue\": \"16000.00\",\n                                    \"year\": 2020\n                                }\n                            }\n                        ],\n                        \"year\": 2020\n                    }\n                },\n                {\n                    \"projection\": {\n                        \"contract_cost\": \"0.00\",\n                        \"cost\": \"17600.00\",\n                        \"direct_cost\": \"17600.00\",\n                        \"expenses\": \"0.00\",\n                        \"month\": 3,\n                        \"open_positions_cost\": \"0.00\",\n                        \"revenue\": \"17600.00\",\n                        \"validated_monthly_positions\": [\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"17600.00\",\n                                    \"direct_cost\": \"17600.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 3,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position3\",\n                                        \"ref\": \"/api/v1/positions/13\"\n                                    },\n                                    \"revenue\": \"17600.00\",\n                                    \"year\": 2020\n                                }\n                            }\n                        ],\n                        \"year\": 2020\n                    }\n                },\n                {\n                    \"projection\": {\n                        \"contract_cost\": \"0.00\",\n                        \"cost\": \"17600.00\",\n                        \"direct_cost\": \"17600.00\",\n                        \"expenses\": \"0.00\",\n                        \"month\": 4,\n                        \"open_positions_cost\": \"0.00\",\n                        \"revenue\": \"17600.00\",\n                        \"validated_monthly_positions\": [\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"17600.00\",\n                                    \"direct_cost\": \"17600.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 4,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position3\",\n                                        \"ref\": \"/api/v1/positions/14\"\n                                    },\n                                    \"revenue\": \"17600.00\",\n                                    \"year\": 2020\n                                }\n                            }\n                        ],\n                        \"year\": 2020\n                    }\n                },\n                {\n                    \"projection\": {\n                        \"contract_cost\": \"0.00\",\n                        \"cost\": \"29400.00\",\n                        \"direct_cost\": \"29400.00\",\n                        \"expenses\": \"0.00\",\n                        \"month\": 5,\n                        \"open_positions_cost\": \"0.00\",\n                        \"revenue\": \"29400.00\",\n                        \"validated_monthly_positions\": [\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"12600.00\",\n                                    \"direct_cost\": \"12600.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 5,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position2\",\n                                        \"ref\": \"/api/v1/positions/3\"\n                                    },\n                                    \"revenue\": \"12600.00\",\n                                    \"year\": 2020\n                                }\n                            },\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"16800.00\",\n                                    \"direct_cost\": \"16800.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 5,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position3\",\n                                        \"ref\": \"/api/v1/positions/15\"\n                                    },\n                                    \"revenue\": \"16800.00\",\n                                    \"year\": 2020\n                                }\n                            }\n                        ],\n                        \"year\": 2020\n                    }\n                },\n                {\n                    \"projection\": {\n                        \"contract_cost\": \"0.00\",\n                        \"cost\": \"30800.00\",\n                        \"direct_cost\": \"30800.00\",\n                        \"expenses\": \"0.00\",\n                        \"month\": 6,\n                        \"open_positions_cost\": \"0.00\",\n                        \"revenue\": \"30800.00\",\n                        \"validated_monthly_positions\": [\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"13200.00\",\n                                    \"direct_cost\": \"13200.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 6,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position2\",\n                                        \"ref\": \"/api/v1/positions/4\"\n                                    },\n                                    \"revenue\": \"13200.00\",\n                                    \"year\": 2020\n                                }\n                            },\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"17600.00\",\n                                    \"direct_cost\": \"17600.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 6,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position3\",\n                                        \"ref\": \"/api/v1/positions/16\"\n                                    },\n                                    \"revenue\": \"17600.00\",\n                                    \"year\": 2020\n                                }\n                            }\n                        ],\n                        \"year\": 2020\n                    }\n                },\n                {\n                    \"projection\": {\n                        \"contract_cost\": \"0.00\",\n                        \"cost\": \"32200.00\",\n                        \"direct_cost\": \"32200.00\",\n                        \"expenses\": \"0.00\",\n                        \"month\": 7,\n                        \"open_positions_cost\": \"0.00\",\n                        \"revenue\": \"32200.00\",\n                        \"validated_monthly_positions\": [\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"13800.00\",\n                                    \"direct_cost\": \"13800.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 7,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position2\",\n                                        \"ref\": \"/api/v1/positions/5\"\n                                    },\n                                    \"revenue\": \"13800.00\",\n                                    \"year\": 2020\n                                }\n                            },\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"18400.00\",\n                                    \"direct_cost\": \"18400.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 7,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position3\",\n                                        \"ref\": \"/api/v1/positions/17\"\n                                    },\n                                    \"revenue\": \"18400.00\",\n                                    \"year\": 2020\n                                }\n                            }\n                        ],\n                        \"year\": 2020\n                    }\n                },\n                {\n                    \"projection\": {\n                        \"contract_cost\": \"0.00\",\n                        \"cost\": \"29400.00\",\n                        \"direct_cost\": \"29400.00\",\n                        \"expenses\": \"0.00\",\n                        \"month\": 8,\n                        \"open_positions_cost\": \"0.00\",\n                        \"revenue\": \"29400.00\",\n                        \"validated_monthly_positions\": [\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"12600.00\",\n                                    \"direct_cost\": \"12600.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 8,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position2\",\n                                        \"ref\": \"/api/v1/positions/6\"\n                                    },\n                                    \"revenue\": \"12600.00\",\n                                    \"year\": 2020\n                                }\n                            },\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"16800.00\",\n                                    \"direct_cost\": \"16800.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 8,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position3\",\n                                        \"ref\": \"/api/v1/positions/18\"\n                                    },\n                                    \"revenue\": \"16800.00\",\n                                    \"year\": 2020\n                                }\n                            }\n                        ],\n                        \"year\": 2020\n                    }\n                },\n                {\n                    \"projection\": {\n                        \"contract_cost\": \"0.00\",\n                        \"cost\": \"30800.00\",\n                        \"direct_cost\": \"30800.00\",\n                        \"expenses\": \"0.00\",\n                        \"month\": 9,\n                        \"open_positions_cost\": \"0.00\",\n                        \"revenue\": \"30800.00\",\n                        \"validated_monthly_positions\": [\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"13200.00\",\n                                    \"direct_cost\": \"13200.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 9,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position2\",\n                                        \"ref\": \"/api/v1/positions/7\"\n                                    },\n                                    \"revenue\": \"13200.00\",\n                                    \"year\": 2020\n                                }\n                            },\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"17600.00\",\n                                    \"direct_cost\": \"17600.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 9,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position3\",\n                                        \"ref\": \"/api/v1/positions/19\"\n                                    },\n                                    \"revenue\": \"17600.00\",\n                                    \"year\": 2020\n                                }\n                            }\n                        ],\n                        \"year\": 2020\n                    }\n                },\n                {\n                    \"projection\": {\n                        \"contract_cost\": \"0.00\",\n                        \"cost\": \"30800.00\",\n                        \"direct_cost\": \"30800.00\",\n                        \"expenses\": \"0.00\",\n                        \"month\": 10,\n                        \"open_positions_cost\": \"0.00\",\n                        \"revenue\": \"30800.00\",\n                        \"validated_monthly_positions\": [\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"13200.00\",\n                                    \"direct_cost\": \"13200.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 10,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position2\",\n                                        \"ref\": \"/api/v1/positions/8\"\n                                    },\n                                    \"revenue\": \"13200.00\",\n                                    \"year\": 2020\n                                }\n                            },\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"17600.00\",\n                                    \"direct_cost\": \"17600.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 10,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position3\",\n                                        \"ref\": \"/api/v1/positions/20\"\n                                    },\n                                    \"revenue\": \"17600.00\",\n                                    \"year\": 2020\n                                }\n                            }\n                        ],\n                        \"year\": 2020\n                    }\n                },\n                {\n                    \"projection\": {\n                        \"contract_cost\": \"0.00\",\n                        \"cost\": \"29400.00\",\n                        \"direct_cost\": \"29400.00\",\n                        \"expenses\": \"0.00\",\n                        \"month\": 11,\n                        \"open_positions_cost\": \"0.00\",\n                        \"revenue\": \"29400.00\",\n                        \"validated_monthly_positions\": [\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"12600.00\",\n                                    \"direct_cost\": \"12600.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 11,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position2\",\n                                        \"ref\": \"/api/v1/positions/9\"\n                                    },\n                                    \"revenue\": \"12600.00\",\n                                    \"year\": 2020\n                                }\n                            },\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"16800.00\",\n                                    \"direct_cost\": \"16800.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 11,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position3\",\n                                        \"ref\": \"/api/v1/positions/21\"\n                                    },\n                                    \"revenue\": \"16800.00\",\n                                    \"year\": 2020\n                                }\n                            }\n                        ],\n                        \"year\": 2020\n                    }\n                },\n                {\n                    \"projection\": {\n                        \"contract_cost\": \"0.00\",\n                        \"cost\": \"32200.00\",\n                        \"direct_cost\": \"32200.00\",\n                        \"expenses\": \"0.00\",\n                        \"month\": 12,\n                        \"open_positions_cost\": \"0.00\",\n                        \"revenue\": \"32200.00\",\n                        \"validated_monthly_positions\": [\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"13800.00\",\n                                    \"direct_cost\": \"13800.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 12,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position2\",\n                                        \"ref\": \"/api/v1/positions/10\"\n                                    },\n                                    \"revenue\": \"13800.00\",\n                                    \"year\": 2020\n                                }\n                            },\n                            {\n                                \"validated_monthly_position\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"18400.00\",\n                                    \"direct_cost\": \"18400.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 12,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"position\": {\n                                        \"name\": \"position3\",\n                                        \"ref\": \"/api/v1/positions/22\"\n                                    },\n                                    \"revenue\": \"18400.00\",\n                                    \"year\": 2020\n                                }\n                            }\n                        ],\n                        \"year\": 2020\n                    }\n                }\n            ]\n        }\n    },\n    \"message\": \"Projection generated successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "54dc6508-4b6e-4252-a1c8-20c6ce5e1cbc",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"project\": {\n        \"description\": \"another description\",\n        \"fixed_bid_price\": null,\n        \"name\": \"updated name\",\n        \"region\": \"test\",\n        \"status\": \"Draft\",\n        \"validated\": false,\n        \"amount\": 100.00,\n        \"billing_type\": \"Time and Materials\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/projects/24",
            "description": "Create a specific project.\n\n\n# Billing types\n## The following 'string' values should be used when updating the BillingType.\n| Type | Value\n|---|---|\n|BillingType.FIXED|Fixed\n|BillingType.WEEKLY|Weekly\n|BillingType.MONTHLY|Monthly\n|BillingType.TIMEMATERIALS|Time and Materials\n\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|id|number|path|project id|n/a (auto-generated by the DBMS)|\n|name|string|body|name|yes|\n|description|string|body|description|no|\n|amount|decimal|body|amount associated with BillingType|no|\n|billing_type|string|body|required to be one of the previously defined 'billing types'|yes|\n|customer_id|integer|body|customer id associated with the project|yes|\n|region_id|integer|body|region id associated with the project|yes|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/projects/{{project_id}}\n```"
          },
          "response": []
        },
        {
          "name": "create",
          "_postman_id": "6c507e2f-0fed-45cf-a2cb-f516e3e0cdad",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"project\": {\n        \"description\": null,\n        \"name\": \"Falling Sabre R&D\",\n        \"customer_id\": 1,\n        \"region_id\": 1,\n        \"amount\": 100.00,\n        \"billing_type\": \"Time and Materials\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/projects",
            "description": "Create a specific project.\n\n\n# Billing types\n## The following 'string' values should be used when updating the BillingType.\n| Type | Value\n|---|---|\n|BillingType.FIXED|Fixed\n|BillingType.WEEKLY|Weekly\n|BillingType.MONTHLY|Monthly\n|BillingType.TIMEMATERIALS|Time and Materials\n\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|id|number|path|project id|n/a (auto-generated by the DBMS)|\n|name|string|body|name|yes|\n|description|string|body|description|no|\n|amount|decimal|body|amount associated with BillingType|no|\n|billing_type|string|body|required to be one of the previously defined 'billing types'|yes|\n|customer_id|integer|body|customer id associated with the project|yes|\n|region_id|integer|body|region id associated with the project|yes|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/projects/{{project_id}}\n```"
          },
          "response": []
        },
        {
          "name": "delete",
          "_postman_id": "36f9fb4b-5303-4928-ac82-314dced18596",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/projects/24",
            "description": "Delete a specific project.\n\n# Parameters\n| Name | Type | In | Description | Required?\n| --- | --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required| yes |\n|id|number|path|project id|yes|\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/projects/{{project_id}}\n```"
          },
          "response": []
        },
        {
          "name": "validate project",
          "_postman_id": "ba8f65a9-1ac4-4ac0-a159-066be2964d12",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {}
              }
            },
            "url": "{{host}}/api/v1/projects/2/validate",
            "description": "Validate a specific project.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required|\n|id|number|path variable|project id|\n\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/projects/{{id}}/validate\n```"
          },
          "response": [
            {
              "id": "99501af0-ab13-4a6d-bb21-30e771da0e5f",
              "name": "Response_200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}"
                  },
                  {
                    "key": "Accept",
                    "value": "*/*"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{host}}/api/v1/projects/2/validate",
                "description": "Validate a specific project.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required|\n|id|number|path variable|project id|\n\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/projects/{{id}}/validate\n```"
              },
              "code": 200,
              "_postman_previewlanguage": "Text",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": ""
            },
            {
              "id": "af4340aa-d707-4c51-b5f5-7838bc0030de",
              "name": "Response_400",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.YzNmYjIyZGUtMjE0MS00NjFmLWJkNjUtMmYwNzg5ZjcyNjU4.M9ZM9GFXqLy4lr-UfvWOYud4eyxnbimdYfgDLWBVGv0"
                  },
                  {
                    "key": "Accept",
                    "value": "*/*"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{host}}/api/v1/projects/2/validate"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "120"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 08 Sep 2020 20:13:29 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjLoGKOorLijtZsAAAGi"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"Unable to validate project, no associated positions\",\n    \"message\": \"\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "validate project (async)",
          "_postman_id": "3cb30d0c-d672-4874-ae18-a0f92396cf1e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {}
              }
            },
            "url": "{{host}}/api/v1/projects/24/validate_async",
            "description": "Invalidate a specific project.  This endpoint will perform the validation of the project asyncronously, allowing the reponse from the server to be returned to the caller immediately.  The caller can then utilize the 'validation_status' endpoint to check status of validation process.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required|\n|id|number|path variable|project id|\n\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/projects/{{id}}/validate_async\n```"
          },
          "response": [
            {
              "id": "58db8308-832e-480a-b8e8-50c5be381fb5",
              "name": "Response_200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}"
                  },
                  {
                    "key": "Accept",
                    "value": "*/*"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{host}}/api/v1/projects/24/validate_async",
                "description": "Invalidate a specific project.  This endpoint will perform the validation of the project asyncronously, allowing the reponse from the server to be returned to the caller immediately.  The caller can then utilize the 'validation_status' endpoint to check status of validation process.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required|\n|id|number|path variable|project id|\n\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/projects/{{id}}/validate_async\n```"
              },
              "code": 200,
              "_postman_previewlanguage": "Text",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": ""
            },
            {
              "id": "617827de-4434-41f0-9cd4-f2edab10adec",
              "name": "Response_400",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.YzNmYjIyZGUtMjE0MS00NjFmLWJkNjUtMmYwNzg5ZjcyNjU4.M9ZM9GFXqLy4lr-UfvWOYud4eyxnbimdYfgDLWBVGv0"
                  },
                  {
                    "key": "Accept",
                    "value": "*/*"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{host}}/api/v1/projects/2/validate"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "120"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 08 Sep 2020 20:13:29 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjLoGKOorLijtZsAAAGi"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"Unable to validate project, no associated positions\",\n    \"message\": \"\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "invalidate project",
          "_postman_id": "89dfc901-e413-4358-b1a6-19c0bb675f2d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {}
              }
            },
            "url": "{{host}}/api/v1/projects/1/invalidate",
            "description": "Invalidate a specific project.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required|\n|id|number|path variable|project id|\n\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/projects/{{id}}/invalidate\n```"
          },
          "response": [
            {
              "id": "a871a325-8ec3-450c-a9b4-242d1c0707b6",
              "name": "Response_200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{access_token}}"
                  },
                  {
                    "key": "Accept",
                    "value": "*/*"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{host}}/api/v1/projects/1/invalidate",
                "description": "Invalidate a specific project.\n\n# Parameters\n| Name | Type | In | Description\n| --- | --- | --- | --- |\n|Authorization|string|header|setting to Access Token is required|\n|id|number|path variable|project id|\n\n\nExample URL w/ path params:\n```\n{{host}}/api/v1/projects/{{id}}/invalidate\n```"
              },
              "code": 200,
              "_postman_previewlanguage": "Text",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": ""
            }
          ]
        }
      ],
      "_postman_id": "06208725-1c2d-498e-93cb-cd6cdf19d2a5"
    },
    {
      "name": "projections",
      "item": [
        {
          "name": "search",
          "_postman_id": "4096b266-31f8-4a52-b7e5-041e4447ffe7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/projections?project_ids=1,2,3,4",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "projections"
              ],
              "query": [
                {
                  "key": "project_ids",
                  "value": "1,2,3,4"
                }
              ]
            },
            "description": "## projections\n\n  * [search](#1-search)\n\n### 1. search\n\n\n## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be:\n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projections?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projections?name=sprite\n```\nThe following filters are supported:\n\n* `customer_name` (actual field is `customer.name)`\n* `description`\n* `fixed_bid_price`\n* `amount`\n* `last_validated_date`\n* `name`\n* `pid`\n* `region_name` (actual field is `region.name)`\n* `status`\n* `billing_type`\n* `validated`\n* `position_date`\n* `customer_ids`\n* `position_ids`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/projections?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`fixed_bid_price_lt` | `fixed_bid_price`\n`amount_lt` | `amount`\n`last_validated_date_lt` | `last_validate_date`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/projections?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`fixed_bid_price_gte` | `fixed_bid_price`\n`amount_gte` | `amount`\n`last_validated_date_gte` | `last_validate_date`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projections?name_prefix=posit\n```\n\nThe following filter names are supported:\n\n* `customer_prefix` (actual field is `customer.name)`\n* `name_prefix` (actual field is `project.name)`\n* `region_prefix` (actual field is `region.name)`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projections?name_search=tion\n```\n\nThe following filter names are supported:\n\n* `customer_search` (actual field is `customer.name)`\n* `name_search` (actual field is `name)`\n* `region_search` (actual field is `region.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projections?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `pid`\n* `description`\n* `status`\n* `billing_type`\n* `validated`\n* `fixed_bid_price`\n* `amount`\n* `last_validated_date`\n* `customer_name` (actual field is `customer.name)`\n* `region_name` (actual field is `region.name)`\n\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projections?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projections?offset=2\n```\n\n## Position Date filter\n\nThe `position_date` filter will filter projects based on start_date/end_date of associated positions.  If an associated position is active, based on the supplied date, the parent project will be included in the result.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projections?position_date=2020-12-01\n```\n\n## Project Ids filter\n\nThe `project_ids` filter will filter projects based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a projection.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projections?project_ids=1,2,3\n```\n\n## Customer Ids filter\n\nThe `customer_ids` filter will filter customers based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a projection.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projections?customer_ids=1,2,3\n```\n\n***Endpoint:***\n\n```bash\nMethod: GET\nType:\nURL: {{host}}/api/v1/projections\n```\n\n\n***Headers:***\n\n| Key | Value | Description |\n| --- | ------|-------------|\n| Authorization | {{access_token}} |  |\n\n\n\n***More example Requests/Responses:***\n\n\n##### I. Example Request: 200 OK\n\n\n***Headers:***\n\n| Key | Value | Description |\n| --- | ------|-------------|\n| Authorization | {{access_token}} |  |\n\n\n\n##### I. Example Response: 200 OK\n```js\n{\n    \"data\": {\n        \"projects\": [\n            {\n                \"project\": {\n                    \"amount\": null,\n                    \"billing_type\": \"Time and Materials\",\n                    \"contacts\": [],\n                    \"customer\": {\n                        \"name\": \"updated customer\",\n                        \"ref\": \"/api/v1/customers/1\"\n                    },\n                    \"deleted_date\": null,\n                    \"description\": null,\n                    \"effective_end_date\": null,\n                    \"effective_start_date\": \"2020-11-22T03:17:46.341055Z\",\n                    \"end_date\": \"2020-06-01\",\n                    \"fixed_bid_price\": null,\n                    \"id\": 3,\n                    \"name\": \"Falling Sabre R&D\",\n                    \"pid\": 3,\n                    \"projection\": {\n                        \"cost\": \"17600.00\",\n                        \"gross_margin\": \"0.00\",\n                        \"margin_change_log_message\": \"valid message goes here\",\n                        \"percent_gross_margin\": \"0.00\",\n                        \"project_id\": 3,\n                        \"revenue\": \"17600.00\",\n                        \"total_contract_cost\": \"0.00\",\n                        \"total_direct_cost\": \"17600.00\",\n                        \"total_expenses\": \"0.00\",\n                        \"total_open_positions_cost\": \"0.00\",\n                        \"valid_monthly_projections\": [\n                            {\n                                \"projection\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"16800.00\",\n                                    \"direct_cost\": \"16800.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 5,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"revenue\": \"16800.00\",\n                                    \"validated_monthly_positions\": [\n                                        {\n                                            \"validated_monthly_position\": {\n                                                \"contract_cost\": \"0.00\",\n                                                \"cost\": \"16800.00\",\n                                                \"direct_cost\": \"16800.00\",\n                                                \"expenses\": \"0.00\",\n                                                \"month\": 5,\n                                                \"open_positions_cost\": \"0.00\",\n                                                \"position\": {\n                                                    \"name\": \"position1\",\n                                                    \"ref\": \"/api/v1/positions/1\"\n                                                },\n                                                \"revenue\": \"16800.00\",\n                                                \"year\": 2020\n                                            }\n                                        }\n                                    ],\n                                    \"year\": 2020\n                                }\n                            },\n                            {\n                                \"projection\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"800.00\",\n                                    \"direct_cost\": \"800.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 6,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"revenue\": \"800.00\",\n                                    \"validated_monthly_positions\": [\n                                        {\n                                            \"validated_monthly_position\": {\n                                                \"contract_cost\": \"0.00\",\n                                                \"cost\": \"800.00\",\n                                                \"direct_cost\": \"800.00\",\n                                                \"expenses\": \"0.00\",\n                                                \"month\": 6,\n                                                \"open_positions_cost\": \"0.00\",\n                                                \"position\": {\n                                                    \"name\": \"position1\",\n                                                    \"ref\": \"/api/v1/positions/2\"\n                                                },\n                                                \"revenue\": \"800.00\",\n                                                \"year\": 2020\n                                            }\n                                        }\n                                    ],\n                                    \"year\": 2020\n                                }\n                            }\n                        ]\n                    },\n                    \"ref\": \"/api/v1/projects/3\",\n                    \"region\": \"test\",\n                    \"start_date\": \"2020-05-01\",\n                    \"status\": \"Draft\",\n                    \"validated\": true\n                }\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"success\": true\n}\n```\n\n\n***Status Code:*** 200\n\n<br>"
          },
          "response": [
            {
              "id": "11dfc08c-3f70-418c-bc73-fc241d67e7f0",
              "name": "200 OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "{{access_token}}"
                  }
                ],
                "url": "{{host}}/api/v1/projects/plus_projection"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Thu, 03 Dec 2020 02:06:39 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Server",
                  "value": "nginx/1.17.7"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "strict-transport-security",
                  "value": "max-age=31536000"
                },
                {
                  "key": "x-request-id",
                  "value": "1d10195f7c015f3754cf767866e67590"
                },
                {
                  "key": "x-total-count",
                  "value": "1"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"projects\": [\n            {\n                \"project\": {\n                    \"amount\": null,\n                    \"billing_type\": \"Time and Materials\",\n                    \"contacts\": [],\n                    \"customer\": {\n                        \"name\": \"updated customer\",\n                        \"ref\": \"/api/v1/customers/1\"\n                    },\n                    \"deleted_date\": null,\n                    \"description\": null,\n                    \"effective_end_date\": null,\n                    \"effective_start_date\": \"2020-11-22T03:17:46.341055Z\",\n                    \"end_date\": \"2020-06-01\",\n                    \"fixed_bid_price\": null,\n                    \"id\": 3,\n                    \"name\": \"Falling Sabre R&D\",\n                    \"pid\": 3,\n                    \"projection\": {\n                        \"cost\": \"17600.00\",\n                        \"gross_margin\": \"0.00\",\n                        \"margin_change_log_message\": \"valid message goes here\",\n                        \"percent_gross_margin\": \"0.00\",\n                        \"project_id\": 3,\n                        \"revenue\": \"17600.00\",\n                        \"total_contract_cost\": \"0.00\",\n                        \"total_direct_cost\": \"17600.00\",\n                        \"total_expenses\": \"0.00\",\n                        \"total_open_positions_cost\": \"0.00\",\n                        \"valid_monthly_projections\": [\n                            {\n                                \"projection\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"16800.00\",\n                                    \"direct_cost\": \"16800.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 5,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"revenue\": \"16800.00\",\n                                    \"validated_monthly_positions\": [\n                                        {\n                                            \"validated_monthly_position\": {\n                                                \"contract_cost\": \"0.00\",\n                                                \"cost\": \"16800.00\",\n                                                \"direct_cost\": \"16800.00\",\n                                                \"expenses\": \"0.00\",\n                                                \"month\": 5,\n                                                \"open_positions_cost\": \"0.00\",\n                                                \"position\": {\n                                                    \"name\": \"position1\",\n                                                    \"ref\": \"/api/v1/positions/1\"\n                                                },\n                                                \"revenue\": \"16800.00\",\n                                                \"year\": 2020\n                                            }\n                                        }\n                                    ],\n                                    \"year\": 2020\n                                }\n                            },\n                            {\n                                \"projection\": {\n                                    \"contract_cost\": \"0.00\",\n                                    \"cost\": \"800.00\",\n                                    \"direct_cost\": \"800.00\",\n                                    \"expenses\": \"0.00\",\n                                    \"month\": 6,\n                                    \"open_positions_cost\": \"0.00\",\n                                    \"revenue\": \"800.00\",\n                                    \"validated_monthly_positions\": [\n                                        {\n                                            \"validated_monthly_position\": {\n                                                \"contract_cost\": \"0.00\",\n                                                \"cost\": \"800.00\",\n                                                \"direct_cost\": \"800.00\",\n                                                \"expenses\": \"0.00\",\n                                                \"month\": 6,\n                                                \"open_positions_cost\": \"0.00\",\n                                                \"position\": {\n                                                    \"name\": \"position1\",\n                                                    \"ref\": \"/api/v1/positions/2\"\n                                                },\n                                                \"revenue\": \"800.00\",\n                                                \"year\": 2020\n                                            }\n                                        }\n                                    ],\n                                    \"year\": 2020\n                                }\n                            }\n                        ]\n                    },\n                    \"ref\": \"/api/v1/projects/3\",\n                    \"region\": \"test\",\n                    \"start_date\": \"2020-05-01\",\n                    \"status\": \"Draft\",\n                    \"validated\": true\n                }\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        }
      ],
      "_postman_id": "d2383495-f85f-4e2f-ad47-35e0461aeedf"
    },
    {
      "name": "employees",
      "item": [
        {
          "name": "search",
          "_postman_id": "7d8a1dd9-1310-45a3-a555-1ee698f85ec4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/employees",
            "description": "## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?name=position1\n```\nThe following filters are supported:\n\n* `daily_billable_hours`\n* `email`\n* `employee_type_name` (actual field is `employee_type.name)`\n* `end_date`\n* `hourly_cost`\n* `name`\n* `region_name` (actual field is `region.name)`\n* `start_date`\n* `utilization_target`\n* `employee_ids`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/employees?daily_billable_hours_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`daily_billable_hours_lt` | `daily_billable_hours`\n`end_date_lt` | `end_date`\n`hourly_cost_lt` | `hourly_cost`\n`start_date_lt` | `start_date`\n`utilization_target_lt` | `utilization_target`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/employees?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`daily_billable_hours_gte` | `daily_billable_hours`\n`end_date_gte` | `end_date`\n`hourly_cost_gte` | `hourly_cost`\n`start_date_gte` | `start_date`\n`utilization_target_gte` | `utilization_target`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?name_prefix=posit\n```\n\nThe following filter names are supported:\n* `employee_type_prefix` (actual field is `employee_type.name)`\n* `name_prefix` (actual field is `employee.name)`\n* `region_prefix` (actual field is `region.name)`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?name_search=tion\n```\n\nThe following filter names are supported:\n* `employee_type_search` (actual field is `employee_type.name)`\n* `name_search` (actual field is `name)`\n* `region_search` (actual field is `region.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `start_date`\n* `end_date`\n* `daily_billable_hours`\n* `email`\n* `hourly_cost`\n* `utilization_target`\n* `employee_type_name` (actual field is `employee_type.name)`\n* `region_name` (actual field is `region.name)`\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?offset=2\n```\n\n## Employee Ids filter\n\nThe `employee_ids` filter will filter employees based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a list.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?employee_ids=1,2,3\n```"
          },
          "response": [
            {
              "id": "36b72105-aef2-4a9d-918f-a12283aa9fa4",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NmQ4MTNiNDYtMTc3Zi00MWY2LTg0M2YtNjg1ZDM4ODJlYjBm.SYhHYLzIWS_WRT4sE3cmAecknp7NqeSwKotUFrBhg7s",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/employees"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "295"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 04:00:14 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTZDFLt7MDk2UUAADzC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"employee\": {\n                \"daily_billable_hours\": 8,\n                \"email\": \"e@e.com\",\n                \"employee_type\": \"1099\",\n                \"end_date\": \"2020-09-14\",\n                \"hourly_cost\": \"200.00\",\n                \"id\": 1,\n                \"name\": \"employee1\",\n                \"ref\": \"/api/v1/employees/1\",\n                \"region\": \"region1\",\n                \"start_date\": \"2020-09-14\",\n                \"utilization_target\": \"100.00\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "ids",
          "_postman_id": "c6b9639f-e23c-44e6-a62c-15105a8716f5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/employees",
            "description": "## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?name=position1\n```\nThe following filters are supported:\n\n* `daily_billable_hours`\n* `email`\n* `employee_type_name` (actual field is `employee_type.name)`\n* `end_date`\n* `hourly_cost`\n* `name`\n* `region_name` (actual field is `region.name)`\n* `start_date`\n* `utilization_target`\n* `employee_ids`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/employees?daily_billable_hours_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`daily_billable_hours_lt` | `daily_billable_hours`\n`end_date_lt` | `end_date`\n`hourly_cost_lt` | `hourly_cost`\n`start_date_lt` | `start_date`\n`utilization_target_lt` | `utilization_target`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/employees?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`daily_billable_hours_gte` | `daily_billable_hours`\n`end_date_gte` | `end_date`\n`hourly_cost_gte` | `hourly_cost`\n`start_date_gte` | `start_date`\n`utilization_target_gte` | `utilization_target`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?name_prefix=posit\n```\n\nThe following filter names are supported:\n* `employee_type_prefix` (actual field is `employee_type.name)`\n* `name_prefix` (actual field is `employee.name)`\n* `region_prefix` (actual field is `region.name)`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?name_search=tion\n```\n\nThe following filter names are supported:\n* `employee_type_search` (actual field is `employee_type.name)`\n* `name_search` (actual field is `name)`\n* `region_search` (actual field is `region.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `start_date`\n* `end_date`\n* `daily_billable_hours`\n* `email`\n* `hourly_cost`\n* `utilization_target`\n* `employee_type_name` (actual field is `employee_type.name)`\n* `region_name` (actual field is `region.name)`\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?offset=2\n```\n\n## Employee Ids filter\n\nThe `employee_ids` filter will filter employees based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a list.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?employee_ids=1,2,3\n```"
          },
          "response": [
            {
              "id": "e5fa387b-87ea-4c25-910d-a569c142f3e2",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NmQ4MTNiNDYtMTc3Zi00MWY2LTg0M2YtNjg1ZDM4ODJlYjBm.SYhHYLzIWS_WRT4sE3cmAecknp7NqeSwKotUFrBhg7s",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/employees"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "295"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 04:00:14 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTZDFLt7MDk2UUAADzC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"employee\": {\n                \"daily_billable_hours\": 8,\n                \"email\": \"e@e.com\",\n                \"employee_type\": \"1099\",\n                \"end_date\": \"2020-09-14\",\n                \"hourly_cost\": \"200.00\",\n                \"id\": 1,\n                \"name\": \"employee1\",\n                \"ref\": \"/api/v1/employees/1\",\n                \"region\": \"region1\",\n                \"start_date\": \"2020-09-14\",\n                \"utilization_target\": \"100.00\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "search plus utilization",
          "_postman_id": "3f48675c-70e2-4e14-91eb-1bab0cc61565",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/employees",
            "description": "## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?name=position1\n```\nThe following filters are supported:\n\n* `daily_billable_hours`\n* `email`\n* `employee_type_name` (actual field is `employee_type.name)`\n* `end_date`\n* `hourly_cost`\n* `name`\n* `region_name` (actual field is `region.name)`\n* `start_date`\n* `utilization_target`\n* `employee_ids`\n* `util_start_date` - start date for utilizations\n* `util_end_date` - end date for utilizations\n\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/employees?daily_billable_hours_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`daily_billable_hours_lt` | `daily_billable_hours`\n`end_date_lt` | `end_date`\n`hourly_cost_lt` | `hourly_cost`\n`start_date_lt` | `start_date`\n`utilization_target_lt` | `utilization_target`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/employees?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`daily_billable_hours_gte` | `daily_billable_hours`\n`end_date_gte` | `end_date`\n`hourly_cost_gte` | `hourly_cost`\n`start_date_gte` | `start_date`\n`utilization_target_gte` | `utilization_target`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?name_prefix=posit\n```\n\nThe following filter names are supported:\n* `employee_type_prefix` (actual field is `employee_type.name)`\n* `name_prefix` (actual field is `employee.name)`\n* `region_prefix` (actual field is `region.name)`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?name_search=tion\n```\n\nThe following filter names are supported:\n* `employee_type_search` (actual field is `employee_type.name)`\n* `name_search` (actual field is `name)`\n* `region_search` (actual field is `region.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `start_date`\n* `end_date`\n* `daily_billable_hours`\n* `email`\n* `hourly_cost`\n* `utilization_target`\n* `employee_type_name` (actual field is `employee_type.name)`\n* `region_name` (actual field is `region.name)`\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?offset=2\n```\n\n## Employee Ids filter\n\nThe `employee_ids` filter will filter employees based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a list.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?employee_ids=1,2,3\n```"
          },
          "response": [
            {
              "id": "e654c689-9392-474e-9256-634d2b6a05ac",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NmQ4MTNiNDYtMTc3Zi00MWY2LTg0M2YtNjg1ZDM4ODJlYjBm.SYhHYLzIWS_WRT4sE3cmAecknp7NqeSwKotUFrBhg7s",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/employees"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "295"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 04:00:14 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTZDFLt7MDk2UUAADzC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"employee\": {\n                \"daily_billable_hours\": 8,\n                \"email\": \"e@e.com\",\n                \"employee_type\": \"1099\",\n                \"end_date\": \"2020-09-14\",\n                \"hourly_cost\": \"200.00\",\n                \"id\": 1,\n                \"name\": \"employee1\",\n                \"ref\": \"/api/v1/employees/1\",\n                \"region\": \"region1\",\n                \"start_date\": \"2020-09-14\",\n                \"utilization_target\": \"100.00\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "count",
          "_postman_id": "bc5a70d1-563a-4eb3-9780-d44b23288e0f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/employees",
            "description": "## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?name=position1\n```\nThe following filters are supported:\n\n* `daily_billable_hours`\n* `email`\n* `employee_type_name` (actual field is `employee_type.name)`\n* `end_date`\n* `hourly_cost`\n* `name`\n* `region_name` (actual field is `region.name)`\n* `start_date`\n* `utilization_target`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/employees?daily_billable_hours_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`daily_billable_hours_lt` | `daily_billable_hours`\n`end_date_lt` | `end_date`\n`hourly_cost_lt` | `hourly_cost`\n`start_date_lt` | `start_date`\n`utilization_target_lt` | `utilization_target`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/employees?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`daily_billable_hours_gte` | `daily_billable_hours`\n`end_date_gte` | `end_date`\n`hourly_cost_gte` | `hourly_cost`\n`start_date_gte` | `start_date`\n`utilization_target_gte` | `utilization_target`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?name_prefix=posit\n```\n\nThe following filter names are supported:\n* `employee_type_prefix` (actual field is `employee_type.name)`\n* `name_prefix` (actual field is `employee.name)`\n* `region_prefix` (actual field is `region.name)`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?name_search=tion\n```\n\nThe following filter names are supported:\n* `employee_type_search` (actual field is `employee_type.name)`\n* `name_search` (actual field is `name)`\n* `region_search` (actual field is `region.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `start_date`\n* `end_date`\n* `daily_billable_hours`\n* `email`\n* `hourly_cost`\n* `utilization_target`\n* `employee_type_name` (actual field is `employee_type.name)`\n* `region_name` (actual field is `region.name)`\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/employees?offset=2\n```"
          },
          "response": [
            {
              "id": "f7e0a271-d016-4f22-ad93-1934c425d2c9",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NmQ4MTNiNDYtMTc3Zi00MWY2LTg0M2YtNjg1ZDM4ODJlYjBm.SYhHYLzIWS_WRT4sE3cmAecknp7NqeSwKotUFrBhg7s",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/employees"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "295"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 04:00:14 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTZDFLt7MDk2UUAADzC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"employee\": {\n                \"daily_billable_hours\": 8,\n                \"email\": \"e@e.com\",\n                \"employee_type\": \"1099\",\n                \"end_date\": \"2020-09-14\",\n                \"hourly_cost\": \"200.00\",\n                \"id\": 1,\n                \"name\": \"employee1\",\n                \"ref\": \"/api/v1/employees/1\",\n                \"region\": \"region1\",\n                \"start_date\": \"2020-09-14\",\n                \"utilization_target\": \"100.00\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "with_positions",
          "_postman_id": "e95dd1ba-9073-42b0-a4f7-5ba329ffeea3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/employees/with/position?effective_date=2016-05-01 19:36:20.829428Z&first=2016-12-01&last=2016-12-01",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "employees",
                "with",
                "position"
              ],
              "query": [
                {
                  "key": "effective_date",
                  "value": "2016-05-01 19:36:20.829428Z"
                },
                {
                  "key": "first",
                  "value": "2016-12-01"
                },
                {
                  "key": "last",
                  "value": "2016-12-01"
                }
              ]
            }
          },
          "response": [
            {
              "id": "b86111f5-9ec8-4717-9d2e-4554bc6244c5",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NmQ4MTNiNDYtMTc3Zi00MWY2LTg0M2YtNjg1ZDM4ODJlYjBm.SYhHYLzIWS_WRT4sE3cmAecknp7NqeSwKotUFrBhg7s",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/employees"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "295"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 04:00:14 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTZDFLt7MDk2UUAADzC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"employee\": {\n                \"daily_billable_hours\": 8,\n                \"email\": \"e@e.com\",\n                \"employee_type\": \"1099\",\n                \"end_date\": \"2020-09-14\",\n                \"hourly_cost\": \"200.00\",\n                \"id\": 1,\n                \"name\": \"employee1\",\n                \"ref\": \"/api/v1/employees/1\",\n                \"region\": \"region1\",\n                \"start_date\": \"2020-09-14\",\n                \"utilization_target\": \"100.00\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "utilization",
          "_postman_id": "f810557c-a351-4cfe-a6aa-8214ff32027f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/employees/salaried/utilization"
          },
          "response": [
            {
              "id": "73ab8b90-6d26-4b3b-982c-6a808554687f",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NmQ4MTNiNDYtMTc3Zi00MWY2LTg0M2YtNjg1ZDM4ODJlYjBm.SYhHYLzIWS_WRT4sE3cmAecknp7NqeSwKotUFrBhg7s",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/employees"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "295"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 04:00:14 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTZDFLt7MDk2UUAADzC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"employee\": {\n                \"daily_billable_hours\": 8,\n                \"email\": \"e@e.com\",\n                \"employee_type\": \"1099\",\n                \"end_date\": \"2020-09-14\",\n                \"hourly_cost\": \"200.00\",\n                \"id\": 1,\n                \"name\": \"employee1\",\n                \"ref\": \"/api/v1/employees/1\",\n                \"region\": \"region1\",\n                \"start_date\": \"2020-09-14\",\n                \"utilization_target\": \"100.00\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "without_positions",
          "_postman_id": "a726a229-4285-414e-a44d-6ac8a9beb576",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/employees/without/position?effective_date=2016-05-01 19:36:20.829428Z&first=2016-12-01&last=2016-12-01",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "employees",
                "without",
                "position"
              ],
              "query": [
                {
                  "key": "effective_date",
                  "value": "2016-05-01 19:36:20.829428Z"
                },
                {
                  "key": "first",
                  "value": "2016-12-01"
                },
                {
                  "key": "last",
                  "value": "2016-12-01"
                }
              ]
            }
          },
          "response": [
            {
              "id": "41e293fb-3b8d-4898-9ebc-5b6c72903c7a",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NmQ4MTNiNDYtMTc3Zi00MWY2LTg0M2YtNjg1ZDM4ODJlYjBm.SYhHYLzIWS_WRT4sE3cmAecknp7NqeSwKotUFrBhg7s",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/employees"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "295"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 04:00:14 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTZDFLt7MDk2UUAADzC"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"employee\": {\n                \"daily_billable_hours\": 8,\n                \"email\": \"e@e.com\",\n                \"employee_type\": \"1099\",\n                \"end_date\": \"2020-09-14\",\n                \"hourly_cost\": \"200.00\",\n                \"id\": 1,\n                \"name\": \"employee1\",\n                \"ref\": \"/api/v1/employees/1\",\n                \"region\": \"region1\",\n                \"start_date\": \"2020-09-14\",\n                \"utilization_target\": \"100.00\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "fc4a53d7-d080-47aa-8d2a-61c4f543a03f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/employees/1"
          },
          "response": []
        },
        {
          "name": "update",
          "_postman_id": "a80fd3da-be34-450e-80bf-097f426b0e99",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n     \"employee\": {\n            \"daily_billable_hours\": 8,\n            \"email\": \"e@e.com\",\n            \"employee_type_id\": 1,\n            \"end_date\": \"2020-09-14\",\n            \"hourly_cost\": \"200.00\",\n            \"name\": \"employee1\",\n            \"region_id\": 1,\n            \"start_date\": \"2020-09-14\",\n            \"utilization_target\": \"100.00\",\n            \"extended_fields\": {\n                \"ext_number\": 2,\n                \"ext_string\": \"dog\"\n            }\n        }\n}   ",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/employees/3"
          },
          "response": [
            {
              "id": "9c2dcd5f-e420-46d5-964a-28e3661260bc",
              "name": "200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NmQ4MTNiNDYtMTc3Zi00MWY2LTg0M2YtNjg1ZDM4ODJlYjBm.SYhHYLzIWS_WRT4sE3cmAecknp7NqeSwKotUFrBhg7s",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n     \"employee\": {\n            \"daily_billable_hours\": 8,\n            \"email\": \"e@e.com\",\n            \"employee_type_id\": 1,\n            \"end_date\": \"2020-09-14\",\n            \"hourly_cost\": \"200.00\",\n            \"name\": \"employee1\",\n            \"region_id\": 1,\n            \"start_date\": \"2020-09-14\",\n            \"utilization_target\": \"100.00\"\n        }\n}   ",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/employees/1"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "322"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 04:05:40 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTZWF60XDzLBO0AAIkB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"employee\": {\n            \"daily_billable_hours\": 8,\n            \"email\": \"e@e.com\",\n            \"employee_type\": \"1099\",\n            \"end_date\": \"2020-09-14\",\n            \"hourly_cost\": \"200.00\",\n            \"id\": 1,\n            \"name\": \"employee1\",\n            \"ref\": \"/api/v1/employees/1\",\n            \"region\": \"region1\",\n            \"start_date\": \"2020-09-14\",\n            \"utilization_target\": \"100.00\"\n        }\n    },\n    \"message\": \"Employee updated successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "70872d6f-88f5-402c-a936-fee0a9c1cbd4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n     \"employee\": {\n            \"daily_billable_hours\": 8,\n            \"email\": \"e@f.com\",\n            \"employee_type_id\": 1,\n            \"end_date\": \"2020-09-14\",\n            \"hourly_cost\": \"200.00\",\n            \"first_name\": \"first name\",\n            \"region_id\": 1,\n            \"start_date\": \"2020-09-14\",\n            \"utilization_target\": \"100.00\",\n            \"last_name\": \"last_name\"\n        }\n}   ",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/employees"
          },
          "response": [
            {
              "id": "9848d2e0-5c11-4bad-8cc2-806ad0224aa0",
              "name": "400",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NmQ4MTNiNDYtMTc3Zi00MWY2LTg0M2YtNjg1ZDM4ODJlYjBm.SYhHYLzIWS_WRT4sE3cmAecknp7NqeSwKotUFrBhg7s"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n     \"employee\": {\n            \"daily_billable_hours\": 8,\n            \"email\": \"e@e.com\",\n            \"employee_type_id\": 1,\n            \"end_date\": \"2020-09-14\",\n            \"hourly_cost\": \"200.00\",\n            \"name\": \"employee2\",\n            \"region_id\": 1,\n            \"start_date\": \"2020-09-14\",\n            \"utilization_target\": \"100.00\"\n        }\n} ",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/employees"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "132"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 04:08:08 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTZesCj6BRa_5MAAImB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"unique_email: has already been taken, \",\n    \"message\": \"Unable to create employee\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "delete",
          "_postman_id": "aca8fa53-6c25-4cf6-9d5a-27ac8df99a69",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/employees/3"
          },
          "response": [
            {
              "id": "824a24bf-3ba5-4ee9-b862-bfaf6c803c5b",
              "name": "200",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NmQ4MTNiNDYtMTc3Zi00MWY2LTg0M2YtNjg1ZDM4ODJlYjBm.SYhHYLzIWS_WRT4sE3cmAecknp7NqeSwKotUFrBhg7s"
                  }
                ],
                "url": "{{host}}/api/v1/employees/3"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "68"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 04:09:17 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTZirnm14CtaRgAAInB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Employee deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        }
      ],
      "_postman_id": "b6cf9de1-82ce-451e-8bb7-57fcd8e5875b"
    },
    {
      "name": "employee_types",
      "item": [
        {
          "name": "list",
          "_postman_id": "6ac7ae1b-3941-4155-99ef-10457f40a51d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/work_exception_types"
          },
          "response": [
            {
              "id": "6c8f6b36-4c07-4b1c-b740-b554ff2ac8f3",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "9ba74b5b-00d9-4787-8fcd-69110335e6cf",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "d3e68c3f-fa1b-480b-a9a7-9ec1689555b6",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "aa50e661-6d60-4f8b-bb7c-06d208fb220a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/work_exception_types/1"
          },
          "response": []
        },
        {
          "name": "delete",
          "_postman_id": "85f24f3e-dc8a-4e9d-b5f5-3e0b9fd9771b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/work_exception_types/1"
          },
          "response": [
            {
              "id": "20f7b1d3-893e-47e8-a09c-79d67efc2d1c",
              "name": "200",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "68"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:27:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNdHENaK0QmGcAAEmB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Position deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "a0632645-6155-4609-8fc7-2785557bdede",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"employee_type\": {\n        \"name\": \"employee type 1\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/employee_types/1"
          },
          "response": [
            {
              "id": "26f52807-d7ff-44c9-8643-3fa077783873",
              "name": "200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "443"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:26:35 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNY9uwmtdLCDcAAEiB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.00\",\n            \"cost\": \"100.00\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:26:36.404673Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 15,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/15\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"Position updated successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "270f6c05-e2d7-46d6-b032-960a7a99669d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"employee_type\": {\n        \"name\": \"employee type 2\",\n        \"is_employee\": true\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/employee_types"
          },
          "response": [
            {
              "id": "19a3bf83-a20f-45ea-870d-9509a56bf70b",
              "name": "400",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"01/01/2020\",\n        \"end_date\": \"01/01/2020\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "139"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:06:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMTxMlIYl_3TEAAD0B"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"end_date: is invalid, start_date: is invalid, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            },
            {
              "id": "4afb5a81-7876-4bb7-907f-b3dae2b85b8c",
              "name": "200",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "412"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:31 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNRvTamxJz0F0AAEWB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.0\",\n            \"cost\": \"100.0\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 14,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/14\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "74540c01-e9c6-424c-baae-a9b793c1174c",
              "name": "400 - employee_id: does not exist",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "122"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:08:27 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMZmGRig_v9OoAAFMF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"employee_id: does not exist, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            }
          ]
        }
      ],
      "_postman_id": "874ca565-6cd7-4a45-9b7c-2ec3d4b0fb6a"
    },
    {
      "name": "positions",
      "item": [
        {
          "name": "search",
          "_postman_id": "e49708b5-6ff2-4b20-91f1-2d205450096c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/positions?position_ids=",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "positions"
              ],
              "query": [
                {
                  "key": "position_ids",
                  "value": ""
                }
              ]
            },
            "description": "## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name=position1\n```\nThe following filters are supported:\n\n* `bill_rate`\n* `cost`\n* `daily_billable_hours`\n* `employee_id`\n* `end_date`\n* `name`\n* `pid`\n* `position_type_id`\n* `project_id`\n* `start_date`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/positions?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`cost_lt` | `cost`\n`daily_billable_hours_lt` | `daily_billable_hours`\n`end_date_lt` | `end_date`\n`start_date_lt` | `start_date`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/positions?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`cost_gte` | `cost`\n`daily_billable_hours_gte` | `daily_billable_hours`\n`end_date_gte` | `end_date`\n`start_date_gte` | `start_date`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name_prefix=posit\n```\n\nThe following filter names are supported:\n* `name_prefix`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name_search=tion\n```\n\nThe following filter names are supported:\n* `name_search`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `start_date`\n* `end_date`\n* `bill_rate`\n* `cost`\n* `daily_billable_hours`\n* `pid`\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?offset=2\n```"
          },
          "response": [
            {
              "id": "714c7945-6b3b-4a89-a7a2-39c6e112e739",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "2c5cd767-f897-4dfe-bcda-f34311f34f01",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "b052b17a-c502-4c64-a115-482e29aa8c1a",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "ids",
          "_postman_id": "67c6b93b-0527-470e-99da-f9177fc6437f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/positions?position_ids=",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "positions"
              ],
              "query": [
                {
                  "key": "position_ids",
                  "value": ""
                }
              ]
            },
            "description": "## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name=position1\n```\nThe following filters are supported:\n\n* `bill_rate`\n* `cost`\n* `daily_billable_hours`\n* `employee_id`\n* `end_date`\n* `name`\n* `pid`\n* `position_type_id`\n* `project_id`\n* `start_date`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/positions?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`cost_lt` | `cost`\n`daily_billable_hours_lt` | `daily_billable_hours`\n`end_date_lt` | `end_date`\n`start_date_lt` | `start_date`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/positions?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`cost_gte` | `cost`\n`daily_billable_hours_gte` | `daily_billable_hours`\n`end_date_gte` | `end_date`\n`start_date_gte` | `start_date`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name_prefix=posit\n```\n\nThe following filter names are supported:\n* `name_prefix`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name_search=tion\n```\n\nThe following filter names are supported:\n* `name_search`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `start_date`\n* `end_date`\n* `bill_rate`\n* `cost`\n* `daily_billable_hours`\n* `pid`\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?offset=2\n```"
          },
          "response": [
            {
              "id": "631c054b-b625-4866-9a17-cf417314f699",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "7966f97b-2cb3-455d-82d6-495b9097eff8",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "be29a2a8-7515-4aad-b3ee-a8a2bbfec2a9",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "search_plus_projection",
          "_postman_id": "d2dee7a5-3b76-49d3-9d6e-62526cecbe72",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/positions/plus_projection",
            "description": "## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name=position1\n```\nThe following filters are supported:\n\n* `bill_rate`\n* `cost`\n* `daily_billable_hours`\n* `employee_id`\n* `end_date`\n* `name`\n* `pid`\n* `position_type_id`\n* `start_date`\n* `position_ids`\n* `project_ids`\n* `open_positions`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/positions?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`cost_lt` | `cost`\n`daily_billable_hours_lt` | `daily_billable_hours`\n`end_date_lt` | `end_date`\n`start_date_lt` | `start_date`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/positions?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`cost_gte` | `cost`\n`daily_billable_hours_gte` | `daily_billable_hours`\n`end_date_gte` | `end_date`\n`start_date_gte` | `start_date`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name_prefix=posit\n```\n\nThe following filter names are supported:\n* `name_prefix`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name_search=tion\n```\n\nThe following filter names are supported:\n* `name_search`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `start_date`\n* `end_date`\n* `bill_rate`\n* `cost`\n* `daily_billable_hours`\n* `pid`\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?offset=2\n```\n\n## position Ids filter\n\nThe `position_ids` filter will filter positions based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a projection.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions/plus_projection?position_ids=1,2,3\n```\n## project Ids filter\n\nThe `project_ids` filter will filter positions on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a projection.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions/plus_projection?project_ids=1,2,3\n```\n\n## open_positions filter\n\nThe `open_positions` filter will filter positions on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return a projection.  If the 'value' = true, then only open_positions will be returned... any other value will ignore the filter.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions/plus_projection?open_positions=true\n```"
          },
          "response": [
            {
              "id": "3fc1f14a-1bfe-40c9-8404-9ed895615075",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "c5aff8cd-6699-40b8-9ba9-294cec3c9b6a",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "ff0052ce-42b6-47c4-8f5e-8b3dea9b229d",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "count",
          "_postman_id": "2cbab94e-400d-479d-a04e-ddb6fb75ae97",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/positions?effective_date=2020-09-23T01:21:15.574094",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "positions"
              ],
              "query": [
                {
                  "key": "effective_date",
                  "value": "2020-09-23T01:21:15.574094"
                }
              ]
            },
            "description": "## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name=position1\n```\nThe following filters are supported:\n\n* `bill_rate`\n* `cost`\n* `daily_billable_hours`\n* `employee_id`\n* `end_date`\n* `name`\n* `pid`\n* `position_type_id`\n* `project_id`\n* `start_date`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/positions?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`cost_lt` | `cost`\n`daily_billable_hours_lt` | `daily_billable_hours`\n`end_date_lt` | `end_date`\n`start_date_lt` | `start_date`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/positions?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`cost_gte` | `cost`\n`daily_billable_hours_gte` | `daily_billable_hours`\n`end_date_gte` | `end_date`\n`start_date_gte` | `start_date`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name_prefix=posit\n```\n\nThe following filter names are supported:\n* `name_prefix`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name_search=tion\n```\n\nThe following filter names are supported:\n* `name_search`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `start_date`\n* `end_date`\n* `bill_rate`\n* `cost`\n* `daily_billable_hours`\n* `pid`\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?offset=2\n```"
          },
          "response": [
            {
              "id": "5efef4cf-4651-4b4a-991b-157c0fa4cf9c",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "ac348587-9a46-46cb-b5d0-be820f9e190c",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "cf039bfe-b6f5-4206-aae4-4ea6112dd7e1",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "history by project Id",
          "_postman_id": "165d7ed7-fde0-4f2c-9e5d-a5fe20e54d6f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/positions/history?project_id=2",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "positions",
                "history"
              ],
              "query": [
                {
                  "key": "project_id",
                  "value": "2"
                }
              ]
            },
            "description": "## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name=position1\n```\nThe following filters are supported:\n\n* `bill_rate`\n* `cost`\n* `daily_billable_hours`\n* `employee_id`\n* `end_date`\n* `name`\n* `pid`\n* `position_type_id`\n* `project_id`\n* `start_date`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/positions?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`cost_lt` | `cost`\n`daily_billable_hours_lt` | `daily_billable_hours`\n`end_date_lt` | `end_date`\n`start_date_lt` | `start_date`\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/positions?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`cost_gte` | `cost`\n`daily_billable_hours_gte` | `daily_billable_hours`\n`end_date_gte` | `end_date`\n`start_date_gte` | `start_date`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name_prefix=posit\n```\n\nThe following filter names are supported:\n* `name_prefix`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?name_search=tion\n```\n\nThe following filter names are supported:\n* `name_search`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?order_by=asc:name\n```\nThe following filters are supported:\n* `name`\n* `start_date`\n* `end_date`\n* `bill_rate`\n* `cost`\n* `daily_billable_hours`\n* `pid`\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/positions?offset=2\n```"
          },
          "response": [
            {
              "id": "4fbda1bd-39c9-4ea7-b0b9-ee92c8ad6dd9",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "6840ec63-4765-49fa-bcf3-f048546e4939",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "6a95f883-245e-4079-ab58-213740d3c4b4",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "e78309c2-9dae-45a1-9879-ce67d64d32d2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/positions/14"
          },
          "response": []
        },
        {
          "name": "delete",
          "_postman_id": "2237c87d-99f4-41bf-a50d-72cbf882806a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/positions/14"
          },
          "response": [
            {
              "id": "bc0f01ad-f613-415d-8b91-ab40b565345d",
              "name": "200",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "68"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:27:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNdHENaK0QmGcAAEmB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Position deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "92e7dabe-0406-4fdb-a79d-ece7f12b5cb1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"position\": {\n        \"bill_rate\": \"200.00\"\n    }\n\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/positions/7"
          },
          "response": [
            {
              "id": "cf4c20e7-72f7-4730-8db8-7b2d93f3c45e",
              "name": "200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "443"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:26:35 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNY9uwmtdLCDcAAEiB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.00\",\n            \"cost\": \"100.00\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:26:36.404673Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 15,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/15\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"Position updated successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "cca229a4-518e-49ec-8e4a-fff9f28e1c57",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/positions"
          },
          "response": [
            {
              "id": "b31c4c89-cd5f-4b7e-b352-0eedd076236f",
              "name": "400",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"01/01/2020\",\n        \"end_date\": \"01/01/2020\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "139"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:06:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMTxMlIYl_3TEAAD0B"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"end_date: is invalid, start_date: is invalid, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            },
            {
              "id": "375eebd1-ef55-4a29-892f-c6d7e136e8b9",
              "name": "400 - employee_id: does not exist",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "122"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:08:27 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMZmGRig_v9OoAAFMF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"employee_id: does not exist, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            },
            {
              "id": "5b2d80b9-9b2b-4694-8579-95a17840172a",
              "name": "200",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "412"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:31 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNRvTamxJz0F0AAEWB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.0\",\n            \"cost\": \"100.0\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 14,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/14\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        }
      ],
      "_postman_id": "9b1c8ef7-1f38-44a9-a378-179503e115cb"
    },
    {
      "name": "position_types",
      "item": [
        {
          "name": "list",
          "_postman_id": "9941525b-64a3-4064-92bd-206d9e7250c3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/position_types"
          },
          "response": [
            {
              "id": "2c02e4e8-d9c6-46d1-90a1-c4e41f83ac60",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "abb713d7-4f78-4d3c-b165-5c700dd36668",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "c18b157c-a558-4a2c-99cd-72fc260788bb",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "466a80f7-a4ba-4472-b044-250222173caf",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/position_types/1"
          },
          "response": []
        },
        {
          "name": "delete",
          "_postman_id": "4f25da86-a924-4e79-9f0b-53755f3710fa",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/position_types/1"
          },
          "response": [
            {
              "id": "396f2aed-f30f-47d4-ae9b-7ef09d07064e",
              "name": "200",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "68"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:27:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNdHENaK0QmGcAAEmB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Position deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "699b3716-8cce-4b6e-9f1b-19c0aa83ac19",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"position_type\": {\n        \"name\": \"position type update\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/position_types/1"
          },
          "response": [
            {
              "id": "f83b813f-b4da-4de5-a918-0dacfd98163e",
              "name": "200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "443"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:26:35 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNY9uwmtdLCDcAAEiB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.00\",\n            \"cost\": \"100.00\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:26:36.404673Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 15,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/15\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"Position updated successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "325e1974-22c8-4d5c-a6f3-83541075c265",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"position_type\": {\n        \"name\": \"test create\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/position_types"
          },
          "response": [
            {
              "id": "1f27d26b-7c1c-4736-a992-16530a7dc96c",
              "name": "400 - employee_id: does not exist",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "122"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:08:27 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMZmGRig_v9OoAAFMF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"employee_id: does not exist, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            },
            {
              "id": "415c2b2e-2e3a-4bce-9cdb-66b1f154af3d",
              "name": "200",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "412"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:31 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNRvTamxJz0F0AAEWB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.0\",\n            \"cost\": \"100.0\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 14,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/14\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "cdb69246-8afa-4567-acd1-ac8ccf5ae8dc",
              "name": "400",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"01/01/2020\",\n        \"end_date\": \"01/01/2020\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "139"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:06:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMTxMlIYl_3TEAAD0B"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"end_date: is invalid, start_date: is invalid, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            }
          ]
        }
      ],
      "_postman_id": "9f160d49-7602-4567-b53c-9f2083f9abb2"
    },
    {
      "name": "daily_expenses",
      "item": [
        {
          "name": "search",
          "_postman_id": "ee16379d-7a8d-40df-9610-3b99ab6281cb",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/daily_expenses?",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "daily_expenses"
              ],
              "query": [
                {
                  "key": "",
                  "value": null
                }
              ]
            },
            "description": "## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?name=sprite\n```\nThe following filters are supported:\n\n  * `cost`\n  * `description`\n  * `pid`\n  * `position_name` (actual field is `position.name)`\n  * `type_name` (actual field is `type.name)`\n\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/daily_expenses?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`cost_lt` | `cost`\n\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/daily_expenses?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`cost_gte` | `cost`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?name_prefix=posit\n```\n\nThe following filter names are supported:\n\n  * `description_prefix` (actual field is `daily_expense.description)`\n  * `position_prefix` (actual field is `position.name)`\n  * `type_prefix` (actual field is `type.name)`\n\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?name_search=tion\n```\n\nThe following filter names are supported:\n\n  * `description_search` (actual field is `description)`\n  * `position_search` (actual field is `position.name)`\n  * `type_search` (actual field is `type.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?order_by=asc:name\n```\nThe following filters are supported:\n* `cost`\n* `description`\n* `pid`\n* `position_name`\n* `type_name`\n\nThe following filters are supported:\n  - `field` will sort on the specified field of the default binding in ascending order\n  - `{:direction, :field}` will sort on the specified field of the default binding in the specified direction\n  - `{:direction, {:binding, :field}}` will sort on the specified field of the specified binding in the specified direction.\n\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?offset=2\n```\n\n## Position Ids filter\n\nThe `position_ids` filter will filter projects based on supplied list of identifiers.  If an invalid id is supplied, the filter will not fail, but will not return any daily daily_expenses.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/projections?project_ids=1,2,3\n```"
          },
          "response": [
            {
              "id": "2a85591c-63ab-4206-bc96-dcbc98aec70a",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "6f74df88-ed6a-4e99-8cf1-587c79179581",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "fa4bfca2-3f9f-429f-8f61-115d85a6de95",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "e680da7a-7904-436c-98fd-394b09ff24a3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/daily_expenses/14"
          },
          "response": []
        },
        {
          "name": "delete",
          "_postman_id": "4a44fab7-d144-4e1f-9e9a-cfe5671bdf79",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/daily_expenses/14"
          },
          "response": [
            {
              "id": "3c2b716e-74bc-4fdf-886b-b320056017f8",
              "name": "200",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "68"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:27:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNdHENaK0QmGcAAEmB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Position deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "a06d9f31-99e1-4f89-8973-7ebe7a9aed2b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"daily_expense\": {\n        \"cost\": 120.00,\n        \"description\": \"description 1\",\n        \"employee_id\": 1,\n        \"position_id\": 5,\n        \"type_id\": 1\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/daily_expenses/3"
          },
          "response": [
            {
              "id": "a72991b6-e820-4e44-92f4-0a8fd8e2542b",
              "name": "200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "443"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:26:35 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNY9uwmtdLCDcAAEiB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.00\",\n            \"cost\": \"100.00\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:26:36.404673Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 15,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/15\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"Position updated successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "b964d072-1926-4195-85a0-677a59a5af36",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"daily_expense\": {\n        \"cost\": 120.00,\n        \"description\": \"description 1\",\n        \"employee_id\": 1,\n        \"position_id\": 5,\n        \"type_id\": 1\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/daily_expenses"
          },
          "response": [
            {
              "id": "2954ea74-16ac-4b64-865c-1642df9f0f37",
              "name": "400 - employee_id: does not exist",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "122"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:08:27 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMZmGRig_v9OoAAFMF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"employee_id: does not exist, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            },
            {
              "id": "d8dd5fc2-b492-4db1-8a2c-d73e09948082",
              "name": "200",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "412"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:31 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNRvTamxJz0F0AAEWB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.0\",\n            \"cost\": \"100.0\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 14,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/14\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "f7b7ff69-1e79-48dd-aa85-f18435bca4e2",
              "name": "400",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"01/01/2020\",\n        \"end_date\": \"01/01/2020\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "139"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:06:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMTxMlIYl_3TEAAD0B"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"end_date: is invalid, start_date: is invalid, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "count",
          "_postman_id": "1b968c84-12d0-405f-849e-ee32887795bc",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/daily_expenses?",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "daily_expenses"
              ],
              "query": [
                {
                  "key": "",
                  "value": null
                }
              ]
            },
            "description": "## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?name=sprite\n```\nThe following filters are supported:\n\n  * `cost`\n  * `description`\n  * `pid`\n  * `position_name` (actual field is `position.name)`\n  * `type_name` (actual field is `type.name)`\n\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/daily_expenses?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`cost_lt` | `cost`\n\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/daily_expenses?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`cost_gte` | `cost`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?name_prefix=posit\n```\n\nThe following filter names are supported:\n\n  * `description_prefix` (actual field is `daily_expense.description)`\n  * `position_prefix` (actual field is `position.name)`\n  * `type_prefix` (actual field is `type.name)`\n\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?name_search=tion\n```\n\nThe following filter names are supported:\n\n  * `description_search` (actual field is `description)`\n  * `position_search` (actual field is `position.name)`\n  * `type_search` (actual field is `type.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?order_by=asc:name\n```\nThe following filters are supported:\n* `cost`\n* `description`\n* `pid`\n* `position_name`\n* `type_name`\n\nThe following filters are supported:\n  - `field` will sort on the specified field of the default binding in ascending order\n  - `{:direction, :field}` will sort on the specified field of the default binding in the specified direction\n  - `{:direction, {:binding, :field}}` will sort on the specified field of the specified binding in the specified direction.\n\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?offset=2\n```"
          },
          "response": [
            {
              "id": "02bdd809-f89a-44d6-aebd-2f119d41ed93",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "bf2fd459-8d13-4e5e-9f74-bed00302cb74",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "cda3b49f-137e-4c54-814c-892724fac0ee",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            }
          ]
        }
      ],
      "_postman_id": "7d9c56d5-f7d1-48f8-9c81-6b3544be4f32"
    },
    {
      "name": "monthly_expenses",
      "item": [
        {
          "name": "search",
          "_postman_id": "3cec4f87-5537-4a33-aec3-29918b97efb0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/monthly_expenses?",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "monthly_expenses"
              ],
              "query": [
                {
                  "key": "",
                  "value": null
                }
              ]
            },
            "description": "## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?name=sprite\n```\nThe following filters are supported:\n\n  * `cost`\n  * `description`\n  * `pid`\n  * `position_name` (actual field is `position.name)`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/daily_expenses?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`cost_lt` | `cost`\n\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/daily_expenses?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`cost_gte` | `cost`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?name_prefix=posit\n```\n\nThe following filter names are supported:\n\n  * `description_prefix` (actual field is `monthly_expense.description)`\n  * `position_prefix` (actual field is `position.name)`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?name_search=tion\n```\n\nThe following filter names are supported:\n\n  * `description_search` (actual field is `description)`\n  * `position_search` (actual field is `position.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?order_by=asc:name\n```\nThe following filters are supported:\n* `month`\n* `year`\n* `description`\n* `pid`\n* `position_name`\n\nThe following filters are supported:\n  - `field` will sort on the specified field of the default binding in ascending order\n  - `{:direction, :field}` will sort on the specified field of the default binding in the specified direction\n  - `{:direction, {:binding, :field}}` will sort on the specified field of the specified binding in the specified direction.\n\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?offset=2\n```"
          },
          "response": [
            {
              "id": "12cdd94e-8805-4d84-90d7-6087a19df137",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "3743c3fe-d981-474a-8ea0-8249fc899615",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "63f58aad-2006-42bd-b5f3-a4bd36396b1d",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "count",
          "_postman_id": "9631c922-86cf-4ef9-acd9-f5807067a177",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/monthly_expenses?",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "monthly_expenses"
              ],
              "query": [
                {
                  "key": "",
                  "value": null
                }
              ]
            },
            "description": "## Effective-date logic\n\nThe effective_date query param is optional. If the `effective_date` param is not supplied, the 'now()' of the system will be used to set the current effective date. If the value is supplied, the format must be: \n```\n{YYYY}-{MM}-{DD}T{h24}:{mm}:{ss}:{xxxxxx}Z\n```\n\nAbbreviation | Time Unit\n--- | ---\n`YYYY` | `full year number (0..9999) `\n`MM` | `month number (1..12)`\n`DD` | `day number (1..31)`\n`h24` | `hour of the day (00..23)`\n`mm` | `minutes of the hour (00..59) `\n`ss` | `seconds of the minute (00..60) `\n`xxxxxx` | `fractional second, based on the precision of microseconds `\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?effective_date=2020-09-23T01:21:15.574094\n```\n\n## Equal-to filters\n\nThe field's value must be equal to the filter value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?name=sprite\n```\nThe following filters are supported:\n\n  * `cost`\n  * `description`\n  * `pid`\n  * `position_name` (actual field is `position.name)`\n\n## Less-than filters\n\nThe field's value must be smaller than the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/daily_expenses?cost_lt=90.00\n```\n\nThe following filter names are supported:\n\nFilter name | Must be smaller than\n--- | ---\n`cost_lt` | `cost`\n\n\n## Greater-than-or-equal-to filters\n\nThe field's value must be greater than or equal to the filter's value.\nExample URL w/ query params:\n```\n{{host}}/api/v1/daily_expenses?daily_billable_hours_gte=90.00\n```\nThe following filter names are supported:\n\nFilter name | Must be greater than or equal to\n--- | ---\n`cost_gte` | `cost`\n\n## String-starts-with filters\n\nThe string-type field's value must start with the filter's value.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?name_prefix=posit\n```\n\nThe following filter names are supported:\n\n  * `description_prefix` (actual field is `monthly_expense.description)`\n  * `position_prefix` (actual field is `position.name)`\n\n## String-contains filters\n\nThe string-type field's value must contain the filter's value.  The minimum number of characters required is 4.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?name_search=tion\n```\n\nThe following filter names are supported:\n\n  * `description_search` (actual field is `description)`\n  * `position_search` (actual field is `position.name)`\n\n## Order-by sorting\n\nOrder-by sorting will support a single filter. If more than one 'order-by' filter is supplied via query param, the last definition will be used.\n\nThe supported filtering directions are:\n\nValue | Description\n--- | ---\n`asc` | `ascending`\n`asc_nulls_last` | `ascending nulls last`\n`asc_nulls_first` | `ascending nulls first`\n`desc` | `descending`\n`desc_nulls_last` | `descending nulls last`\n`desc_nulls_first` | `descending nulls first`\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?order_by=asc:name\n```\nThe following filters are supported:\n* `month`\n* `year`\n* `description`\n* `pid`\n* `position_name`\n\nThe following filters are supported:\n  - `field` will sort on the specified field of the default binding in ascending order\n  - `{:direction, :field}` will sort on the specified field of the default binding in the specified direction\n  - `{:direction, {:binding, :field}}` will sort on the specified field of the specified binding in the specified direction.\n\n\n## Limit filter\n\nThe `limit` filter sets a maximum for the number of rows in the result set and may be used for pagination.  Default limit if not set is 50.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?limit=25\n```\n\n## Offset filter\n\nThe `offset` filter skips a number of rows in the result set and may be used for pagination.\n\nExample URL w/ query params:\n\n```\n{{host}}/api/v1/daily_expenses?offset=2\n```"
          },
          "response": [
            {
              "id": "127b987a-7529-47b2-9511-02340cbfc65b",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "e22a36b6-1c58-4f24-9f25-d6ddc3bc1f0f",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "f6faf4a8-3764-4dc9-9e34-edde1350b779",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "d7c9140a-bcb4-40df-9e85-f35e009472fa",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/monthly_expenses/14"
          },
          "response": []
        },
        {
          "name": "delete",
          "_postman_id": "3095db75-78a3-4f44-b8a5-79c72a40f773",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/monthly_expenses/14"
          },
          "response": [
            {
              "id": "3a6ce603-1101-420d-a66a-e10a61661e40",
              "name": "200",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "68"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:27:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNdHENaK0QmGcAAEmB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Position deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "b2bbad39-2b83-4234-bcc7-c266b7a1a997",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"monthly_expense\": {\n        \"month\": 1,\n        \"year\": 2019,\n        \"cost\": 200.00,\n        \"description\": \"description 1\",\n        \"position_id\": 5\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/monthly_expenses/3"
          },
          "response": [
            {
              "id": "b5268bca-0be4-44d7-a772-d45d32873971",
              "name": "200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "443"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:26:35 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNY9uwmtdLCDcAAEiB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.00\",\n            \"cost\": \"100.00\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:26:36.404673Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 15,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/15\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"Position updated successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "00263d56-5c01-495c-922e-badd9721fd40",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"monthly_expense\": {\n        \"month\": 1,\n        \"year\": 2019,\n        \"cost\": 200.00,\n        \"description\": \"description 1\",\n        \"position_id\": 5\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/monthly_expenses"
          },
          "response": [
            {
              "id": "09ba8870-bb96-4335-afaf-d8fc6a8bc0ec",
              "name": "200",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "412"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:31 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNRvTamxJz0F0AAEWB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.0\",\n            \"cost\": \"100.0\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 14,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/14\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "44b940eb-9ec2-44c5-84dd-4540829cbc97",
              "name": "400 - employee_id: does not exist",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "122"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:08:27 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMZmGRig_v9OoAAFMF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"employee_id: does not exist, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            },
            {
              "id": "5656635c-c06b-4ca8-8189-3731b69e73ee",
              "name": "400",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"01/01/2020\",\n        \"end_date\": \"01/01/2020\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "139"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:06:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMTxMlIYl_3TEAAD0B"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"end_date: is invalid, start_date: is invalid, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            }
          ]
        }
      ],
      "_postman_id": "9a257a69-fee5-422f-bc2a-302b47b24e4d"
    },
    {
      "name": "regions",
      "item": [
        {
          "name": "list",
          "_postman_id": "0a22c3ff-b8c9-42c9-ba27-1ae5cdcca066",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/regions"
          },
          "response": [
            {
              "id": "1c744b08-4f36-4c14-bd50-f2d90434433d",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "b3dbfb76-6332-474d-ab97-4ada2f2ba818",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "e126f4de-397d-47bb-828b-eff71211c836",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "54245ead-ae45-4bab-9f3f-29142694724a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/regions/1"
          },
          "response": []
        },
        {
          "name": "delete",
          "_postman_id": "b27b1fa8-c298-4ea7-8c77-7a56fc7f831e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/regions/3"
          },
          "response": [
            {
              "id": "5ee946bd-abb7-4942-bac8-7e04d4c447ad",
              "name": "200",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "68"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:27:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNdHENaK0QmGcAAEmB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Position deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "90fcbe87-fdf7-4821-b562-b3f66699ff1d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"region\": {\n        \"name\": \"region update\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/regions/1"
          },
          "response": [
            {
              "id": "2c82548f-0210-4c5c-bb93-7a7ab862340b",
              "name": "200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "443"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:26:35 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNY9uwmtdLCDcAAEiB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.00\",\n            \"cost\": \"100.00\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:26:36.404673Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 15,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/15\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"Position updated successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "4fa6c0c0-ed49-41da-bfad-89b2d61bb2eb",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"region\": {\n        \"name\": \"test\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/regions"
          },
          "response": [
            {
              "id": "15faaad3-21cc-4e17-8ef9-7a9df90c23f2",
              "name": "400 - employee_id: does not exist",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "122"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:08:27 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMZmGRig_v9OoAAFMF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"employee_id: does not exist, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            },
            {
              "id": "7f38aa52-f98d-4ae1-98e7-5bbb0f51061e",
              "name": "400",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"01/01/2020\",\n        \"end_date\": \"01/01/2020\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "139"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:06:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMTxMlIYl_3TEAAD0B"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"end_date: is invalid, start_date: is invalid, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            },
            {
              "id": "80645058-e71b-47d8-bce1-1766a2bdb5fe",
              "name": "200",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "412"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:31 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNRvTamxJz0F0AAEWB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.0\",\n            \"cost\": \"100.0\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 14,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/14\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        }
      ],
      "_postman_id": "50b73076-ea65-4374-8e2a-ab05cd396413"
    },
    {
      "name": "work_exception_types",
      "item": [
        {
          "name": "list",
          "_postman_id": "fdbcc59a-7a42-436e-92f6-b9a5ed9b530f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/work_exception_types"
          },
          "response": [
            {
              "id": "635f15d7-e3b5-44f5-aa8e-1ef4f5bc05e9",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "9037e570-45cc-48e5-a9c5-1c9790fee231",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            },
            {
              "id": "dec8469d-0423-4284-9dde-97db3529c6d2",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "5bffbf1b-7128-4e28-a971-099f0a3c265d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/work_exception_types/1"
          },
          "response": []
        },
        {
          "name": "delete",
          "_postman_id": "23ddae72-40e9-4833-b884-b48e04ff78e7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/work_exception_types/1"
          },
          "response": [
            {
              "id": "51e87b78-f5d1-4ede-a480-31e6824fe93f",
              "name": "200",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "68"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:27:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNdHENaK0QmGcAAEmB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Position deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "c4d7debb-58c3-4778-a966-162d4194c343",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"work_exception_type\": {\n        \"name\": \"region update\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/work_exception_types/1"
          },
          "response": [
            {
              "id": "b8a7ea7f-50bf-43bf-8e93-461904abc94e",
              "name": "200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "443"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:26:35 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNY9uwmtdLCDcAAEiB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.00\",\n            \"cost\": \"100.00\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:26:36.404673Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 15,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/15\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"Position updated successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "afe3358f-babd-4ebe-970d-054743a383c3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"work_exception_type\": {\n        \"name\": \"test\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/work_exception_types"
          },
          "response": [
            {
              "id": "01459859-2593-476a-b7ff-aef34f5d2aa7",
              "name": "200",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "412"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:31 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNRvTamxJz0F0AAEWB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.0\",\n            \"cost\": \"100.0\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 14,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/14\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "3a45969f-511b-4d4a-9d44-1f70c5e34f9d",
              "name": "400",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"01/01/2020\",\n        \"end_date\": \"01/01/2020\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "139"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:06:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMTxMlIYl_3TEAAD0B"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"end_date: is invalid, start_date: is invalid, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            },
            {
              "id": "4937f875-d111-4443-b2c5-d69617bbdc42",
              "name": "400 - employee_id: does not exist",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "122"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:08:27 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMZmGRig_v9OoAAFMF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"employee_id: does not exist, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            }
          ]
        }
      ],
      "_postman_id": "fbdc9ea9-95df-401f-8e08-2e37a80c9692"
    },
    {
      "name": "daily_expense_types",
      "item": [
        {
          "name": "list",
          "_postman_id": "8c58dd55-feb5-4529-8744-78699f41ed91",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/daily_expense_types"
          },
          "response": [
            {
              "id": "63196bfd-efa1-4977-bb3a-a75d9626effd",
              "name": "401",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "86"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Mon, 14 Sep 2020 23:53:07 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTLkCibmgAfA8QAADxB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 401,\n    \"errors\": \"Not Authenticated\",\n    \"message\": \"\",\n    \"success\": false\n}"
            },
            {
              "id": "7066c647-ef31-4b10-8221-e7f004edfd16",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "416"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:59 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNTWFPqOjH3R8AAEbB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": [\n        {\n            \"position\": {\n                \"bill_rate\": \"100.00\",\n                \"cost\": \"100.00\",\n                \"daily_billable_hours\": 8,\n                \"deleted_date\": null,\n                \"effective_end_date\": null,\n                \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n                \"employee_ref\": \"/api/v1/employees/1\",\n                \"end_date\": \"2020-06-01\",\n                \"id\": 14,\n                \"name\": \"position1\",\n                \"pid\": 14,\n                \"project_ref\": \"/api/v1/projects/2\",\n                \"ref\": \"/api/v1/positions/14\",\n                \"start_date\": \"2020-05-01\",\n                \"type\": \"type1\"\n            }\n        }\n    ],\n    \"message\": \"\",\n    \"success\": true\n}"
            },
            {
              "id": "c28ee6cf-abb7-4cb6-b880-47df287e4911",
              "name": "200",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8",
                    "type": "text"
                  }
                ],
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "55"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:00:52 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTL_Ljhagu9mDIAADSD"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"No results found\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "get",
          "_postman_id": "b5aa1b76-0a9c-4b35-9f6c-88704bebec32",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/daily_expense_types/1"
          },
          "response": []
        },
        {
          "name": "delete",
          "_postman_id": "21ae5254-cd77-4d57-b732-bd51231c1883",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": "{{host}}/api/v1/daily_expense_types/1"
          },
          "response": [
            {
              "id": "6a54fafe-dcd7-4824-9960-b8afcf4ed364",
              "name": "200",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "68"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:27:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNdHENaK0QmGcAAEmB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"message\": \"Position deleted successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "update",
          "_postman_id": "7bb4f4a2-5554-465c-b468-f4434fcff0b8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"daily_expense_type\": {\n        \"name\": \"expense type 1\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/daily_expense_types/1"
          },
          "response": [
            {
              "id": "ad89aaaf-119f-4a8e-b4f2-53416d92cd12",
              "name": "200",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions/14"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "443"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:26:35 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNY9uwmtdLCDcAAEiB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.00\",\n            \"cost\": \"100.00\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:26:36.404673Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 15,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/15\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"Position updated successfully\",\n    \"success\": true\n}"
            }
          ]
        },
        {
          "name": "create",
          "_postman_id": "494ec194-2e56-43f0-9cef-599574bd4c56",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"daily_expense_type\": {\n        \"name\": \"test\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/daily_expense_types"
          },
          "response": [
            {
              "id": "efa064ca-ffb0-4d0a-93fd-186a0eb6667c",
              "name": "400 - employee_id: does not exist",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "122"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:08:27 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMZmGRig_v9OoAAFMF"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"employee_id: does not exist, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            },
            {
              "id": "f7b4fe12-06bc-4c78-90f0-c4a33136eb3e",
              "name": "400",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.NGU2MjUxZGEtNjE3MC00ZjFlLWIzOTUtNjJkM2VlYzQ1Zjhh.75RJzOo9OPsZb6Cm4mOSLYtGWSvFh7WUwMRvO3o5Rt8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"01/01/2020\",\n        \"end_date\": \"01/01/2020\",\n        \"employee_id\": 1,\n        \"project_id\": 1,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "139"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:06:47 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTMTxMlIYl_3TEAAD0B"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {},\n    \"error_code\": 400,\n    \"errors\": \"end_date: is invalid, start_date: is invalid, \",\n    \"message\": \"Unable to create project\",\n    \"success\": false\n}"
            },
            {
              "id": "fa39afc3-9be4-4a23-b0d7-60ebbbad2fb5",
              "name": "200",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "SFMyNTY.M2MyNTVmNzAtMzhjYi00NTQzLTkyMWMtMTgwOTNjYTliODc1.dDWiIqSxwl-ncDbdSpJS3vJFcKFCEZ5EBeq7A-HOYl4"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"position\": {\n        \"name\": \"position1\",\n        \"bill_rate\": 100.00,\n        \"cost\": 100.00,\n        \"daily_billable_hours\": 8,\n        \"start_date\": \"2020-05-01\",\n        \"end_date\": \"2020-06-01\",\n        \"employee_id\": 1,\n        \"project_id\": 2,\n        \"position_type_id\": 1\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{host}}/api/v1/positions"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "cache-control",
                  "value": "max-age=0, private, must-revalidate"
                },
                {
                  "key": "content-length",
                  "value": "412"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "date",
                  "value": "Tue, 15 Sep 2020 00:24:31 GMT"
                },
                {
                  "key": "server",
                  "value": "Cowboy"
                },
                {
                  "key": "x-request-id",
                  "value": "FjTNRvTamxJz0F0AAEWB"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"data\": {\n        \"position\": {\n            \"bill_rate\": \"100.0\",\n            \"cost\": \"100.0\",\n            \"daily_billable_hours\": 8,\n            \"deleted_date\": null,\n            \"effective_end_date\": null,\n            \"effective_start_date\": \"2020-09-15T00:24:32.274553Z\",\n            \"employee_ref\": \"/api/v1/employees/1\",\n            \"end_date\": \"2020-06-01\",\n            \"id\": 14,\n            \"name\": \"position1\",\n            \"pid\": 14,\n            \"project_ref\": \"/api/v1/projects/2\",\n            \"ref\": \"/api/v1/positions/14\",\n            \"start_date\": \"2020-05-01\",\n            \"type\": \"type1\"\n        }\n    },\n    \"message\": \"\",\n    \"success\": true\n}"
            }
          ]
        }
      ],
      "_postman_id": "c327f865-f62d-4122-b195-cb9d3af9f4bc"
    },
    {
      "name": "session",
      "item": [
        {
          "name": "create session",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "02faea99-0f5c-47e1-ac8b-d0f5550024d7",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "3eecb605-9b76-4ff0-9a9e-af00b754127b",
                "exec": [
                  "let jsonData = pm.response.json();",
                  "pm.environment.set('access_token', jsonData.data.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "480a1eec-7473-4b2d-8274-b4783ed3332e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{host}}/api/v1/session?user[email]=admin@nxdomain.com&user[password]=123123123",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "session"
              ],
              "query": [
                {
                  "key": "user[email]",
                  "value": "admin@nxdomain.com"
                },
                {
                  "key": "user[password]",
                  "value": "123123123"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "delete",
          "_postman_id": "669ce93b-c10c-4dfd-b391-aa94fc956b37",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "{{access_token}}",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/session"
          },
          "response": []
        },
        {
          "name": "renew",
          "_postman_id": "65c4139c-6871-4701-a329-51bfbe860de9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "",
                "type": "text"
              }
            ],
            "url": "{{host}}/api/v1/session/renew"
          },
          "response": []
        },
        {
          "name": "google auth callback",
          "_postman_id": "bcd1ab5f-9755-4e53-a65e-5821000c3398",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"session_params\": {\n            \"state\": \"{{state}}\"\n        },\n        \"scope\": \"email profile https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile openid\",\n        \"prompt\": \"none\",\n        \"code\": \"4/0AY0e-g7u_u8J_aJRkRTog8AONwC882uFebZV14pOP518Yj1WUcn1Er-WH08TjksF_-AeoA\",\n        \"redirect_uri\": \"https://augustwenty.com\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{host}}/api/v1/auth/google/callback"
          },
          "response": []
        },
        {
          "name": "google new auth",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a0c829dc-eb75-49b0-b66f-0647a2883401",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "527873e5-b84b-402b-9fad-80f409a73076",
                "exec": [
                  "let jsonData = pm.response.json();",
                  "pm.environment.set('state', jsonData.data.session_params.state);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "ead38bbe-c327-4191-ad6a-2f6fc1d31623",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{access_token}}"
              }
            ],
            "url": {
              "raw": "{{host}}/api/v1/auth/google/new?redirect_uri=https://augustwenty.com",
              "host": [
                "{{host}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "google",
                "new"
              ],
              "query": [
                {
                  "key": "redirect_uri",
                  "value": "https://augustwenty.com"
                }
              ]
            }
          },
          "response": []
        }
      ],
      "_postman_id": "8789277a-d4d6-4bb0-adde-afdc7a7f1804"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "c9761700-67bb-456e-a565-90c40dc7103b",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "1d0006a6-607c-405e-afd9-bfebdcf2362a",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}